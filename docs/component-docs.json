[
  {
    "name": "GlimAccordion",
    "description": "Accordion An expandable/collapsible accordion component that displays items with titles and expandable content. Features smooth animations and customizable max-width settings.",
    "props": {},
    "events": {},
    "methods": {},
    "computed": {
      "accordionStyles": {
        "name": "accordionStyles",
        "description": "No description provided",
        "type": "any"
      }
    },
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-elevation-base)",
          "value": "var(--glim-color-elevation-base)",
          "description": "Color token var(--glim-color-elevation-base)"
        },
        {
          "name": "var(--glim-color-interaction-expanded)",
          "value": "var(--glim-color-interaction-expanded)",
          "description": "Color token var(--glim-color-interaction-expanded)"
        },
        {
          "name": "var(--glim-color-text-strong)",
          "value": "var(--glim-color-text-strong)",
          "description": "Color token var(--glim-color-text-strong)"
        },
        {
          "name": "var(--glim-color-interaction-hover)",
          "value": "var(--glim-color-interaction-hover)",
          "description": "Color token var(--glim-color-interaction-hover)"
        },
        {
          "name": "var(--glim-color-text-soft)",
          "value": "var(--glim-color-text-soft)",
          "description": "Color token var(--glim-color-text-soft)"
        },
        {
          "name": "var(--glim-color-text-soft)",
          "value": "var(--glim-color-text-soft)",
          "description": "Color token var(--glim-color-text-soft)"
        }
      ],
      "dimensions": [],
      "strings": [
        {
          "name": "accordion",
          "value": "accordion",
          "description": "String token accordion"
        },
        {
          "name": "accordionStyles",
          "value": "accordionStyles",
          "description": "String token accordionStyles"
        },
        {
          "name": "index",
          "value": "index",
          "description": "String token index"
        },
        {
          "name": "accordion-item",
          "value": "accordion-item",
          "description": "String token accordion-item"
        },
        {
          "name": "expanded",
          "value": "expanded",
          "description": "String token expanded"
        },
        {
          "name": "expanding",
          "value": "expanding",
          "description": "String token expanding"
        },
        {
          "name": "collapsing",
          "value": "collapsing",
          "description": "String token collapsing"
        },
        {
          "name": "chevron-down",
          "value": "chevron-down",
          "description": "String token chevron-down"
        },
        {
          "name": "accordion-icon",
          "value": "accordion-icon",
          "description": "String token accordion-icon"
        },
        {
          "name": "true",
          "value": "true",
          "description": "String token true"
        },
        {
          "name": "expand",
          "value": "expand",
          "description": "String token expand"
        },
        {
          "name": "endExpand",
          "value": "endExpand",
          "description": "String token endExpand"
        },
        {
          "name": "endCollapse",
          "value": "endCollapse",
          "description": "String token endCollapse"
        },
        {
          "name": "accordionItems",
          "value": "accordionItems",
          "description": "String token accordionItems"
        },
        {
          "name": "600px",
          "value": "600px",
          "description": "String token 600px"
        },
        {
          "name": "faqItems",
          "value": "faqItems",
          "description": "String token faqItems"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "600px",
          "value": "600px",
          "description": "String token 600px"
        },
        {
          "name": "Features",
          "value": "Features",
          "description": "String token Features"
        },
        {
          "name": "Support",
          "value": "Support",
          "description": "String token Support"
        },
        {
          "name": "number",
          "value": "number",
          "description": "String token number"
        },
        {
          "name": "number",
          "value": "number",
          "description": "String token number"
        },
        {
          "name": "span",
          "value": "span",
          "description": "String token span"
        }
      ]
    }
  },
  {
    "name": "GlimAvatar",
    "description": "GlimAvatar A versatile avatar component for displaying user images with fallback icon support. Supports different shapes (circle or squircle) and customizable sizing.",
    "props": {
      "image": {
        "name": "image",
        "type": "String",
        "required": false,
        "default": "https://cdn.cosmos.so/962784fe-d06b-4f23-84e5-f0a1efd3a6d6.?format=jpeg",
        "description": "The image prop"
      },
      "alt": {
        "name": "alt",
        "type": "String",
        "required": false,
        "default": "User avatar",
        "description": "The alt prop"
      },
      "size": {
        "name": "size",
        "type": "Number",
        "required": false,
        "default": "40",
        "description": "The size prop"
      },
      "shape": {
        "name": "shape",
        "type": "String",
        "required": false,
        "default": "circle",
        "description": "The shape prop"
      }
    },
    "events": {},
    "methods": {},
    "computed": {},
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-color-solid-100)",
          "value": "var(--glim-color-color-solid-100)",
          "description": "Color token var(--glim-color-color-solid-100)"
        }
      ],
      "dimensions": [],
      "strings": [
        {
          "name": "avatar",
          "value": "avatar",
          "description": "String token avatar"
        },
        {
          "name": "avatar--fallback",
          "value": "avatar--fallback",
          "description": "String token avatar--fallback"
        },
        {
          "name": "avatar--squircle",
          "value": "avatar--squircle",
          "description": "String token avatar--squircle"
        },
        {
          "name": "squircle",
          "value": "squircle",
          "description": "String token squircle"
        },
        {
          "name": "avatar--circle",
          "value": "avatar--circle",
          "description": "String token avatar--circle"
        },
        {
          "name": "circle",
          "value": "circle",
          "description": "String token circle"
        },
        {
          "name": "image",
          "value": "image",
          "description": "String token image"
        },
        {
          "name": "image",
          "value": "image",
          "description": "String token image"
        },
        {
          "name": "alt",
          "value": "alt",
          "description": "String token alt"
        },
        {
          "name": "avatar__image",
          "value": "avatar__image",
          "description": "String token avatar__image"
        },
        {
          "name": "avatar__fallback",
          "value": "avatar__fallback",
          "description": "String token avatar__fallback"
        },
        {
          "name": "user",
          "value": "user",
          "description": "String token user"
        },
        {
          "name": "squircle",
          "value": "squircle",
          "description": "String token squircle"
        },
        {
          "name": "circle",
          "value": "circle",
          "description": "String token circle"
        },
        {
          "name": "squircle",
          "value": "squircle",
          "description": "String token squircle"
        },
        {
          "name": "circle",
          "value": "circle",
          "description": "String token circle"
        },
        {
          "name": "circle",
          "value": "circle",
          "description": "String token circle"
        },
        {
          "name": "squircle",
          "value": "squircle",
          "description": "String token squircle"
        },
        {
          "name": "circle",
          "value": "circle",
          "description": "String token circle"
        },
        {
          "name": "circle",
          "value": "circle",
          "description": "String token circle"
        },
        {
          "name": "squircle",
          "value": "squircle",
          "description": "String token squircle"
        }
      ]
    }
  },
  {
    "name": "GlimBadge",
    "description": "GlimBadge Displays a small numerical value or indicator that can be used for notifications, counts, or status indicators. The badge can be displayed as a number with optional maximum value or as a simple dot.",
    "props": {
      "value": {
        "name": "value",
        "type": "any",
        "required": false,
        "default": "0",
        "description": "The value prop"
      },
      "max": {
        "name": "max",
        "type": "Number",
        "required": false,
        "default": "99",
        "description": "The max prop"
      },
      "isDot": {
        "name": "isDot",
        "type": "Boolean",
        "required": false,
        "default": "false",
        "description": "The isDot prop"
      }
    },
    "events": {},
    "methods": {},
    "computed": {
      "formattedContent": {
        "name": "formattedContent",
        "description": "No description provided",
        "type": "any"
      }
    },
    "tokens": {
      "colors": [],
      "dimensions": [],
      "strings": [
        {
          "name": "badge",
          "value": "badge",
          "description": "String token badge"
        },
        {
          "name": "badge--dot",
          "value": "badge--dot",
          "description": "String token badge--dot"
        },
        {
          "name": "body-xs-loud",
          "value": "body-xs-loud",
          "description": "String token body-xs-loud"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "100",
          "value": "100",
          "description": "String token 100"
        },
        {
          "name": "NEW",
          "value": "NEW",
          "description": "String token NEW"
        },
        {
          "name": "number",
          "value": "number",
          "description": "String token number"
        }
      ]
    }
  },
  {
    "name": "GlimBanner",
    "description": "GlimBanner A banner component that displays information or notifications with different variants. Can be dismissible and supports both a title and description.",
    "props": {
      "description": {
        "name": "description",
        "type": "String",
        "required": false,
        "default": "Description",
        "description": "The description prop"
      },
      "title": {
        "name": "title",
        "type": "String",
        "required": false,
        "default": "Title",
        "description": "The title prop"
      },
      "variant": {
        "name": "variant",
        "type": "String",
        "required": false,
        "default": "default",
        "description": "The variant prop"
      },
      "dismissable": {
        "name": "dismissable",
        "type": "Boolean",
        "required": false,
        "default": "false",
        "description": "The dismissable prop"
      }
    },
    "events": {},
    "methods": {},
    "computed": {},
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-elevation-background-inverse)",
          "value": "var(--glim-color-elevation-background-inverse)",
          "description": "Color token var(--glim-color-elevation-background-inverse)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        }
      ],
      "dimensions": [
        {
          "name": "var(--glim-dimension-padding-3)",
          "value": "var(--glim-dimension-padding-3)",
          "description": "Dimension token var(--glim-dimension-padding-3)"
        },
        {
          "name": "var(--glim-dimension-padding-4)",
          "value": "var(--glim-dimension-padding-4)",
          "description": "Dimension token var(--glim-dimension-padding-4)"
        }
      ],
      "strings": [
        {
          "name": "banner",
          "value": "banner",
          "description": "String token banner"
        },
        {
          "name": "banner--dismissible",
          "value": "banner--dismissible",
          "description": "String token banner--dismissible"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "dismissable",
          "value": "dismissable",
          "description": "String token dismissable"
        },
        {
          "name": "ghost",
          "value": "ghost",
          "description": "String token ghost"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "dismiss",
          "value": "dismiss",
          "description": "String token dismiss"
        },
        {
          "name": "Notice",
          "value": "Notice",
          "description": "String token Notice"
        },
        {
          "name": "info",
          "value": "info",
          "description": "String token info"
        },
        {
          "name": "Description",
          "value": "Description",
          "description": "String token Description"
        },
        {
          "name": "Description",
          "value": "Description",
          "description": "String token Description"
        },
        {
          "name": "Title",
          "value": "Title",
          "description": "String token Title"
        },
        {
          "name": "Title",
          "value": "Title",
          "description": "String token Title"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "info",
          "value": "info",
          "description": "String token info"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "info",
          "value": "info",
          "description": "String token info"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "info",
          "value": "info",
          "description": "String token info"
        },
        {
          "name": "dismiss",
          "value": "dismiss",
          "description": "String token dismiss"
        },
        {
          "name": "css",
          "value": "css",
          "description": "String token css"
        }
      ]
    }
  },
  {
    "name": "GlimButton",
    "description": "A versatile button component with multiple variants, sizes, and states. Supports icons, loading states, and inverse color schemes. Use for user interactions and form submissions.",
    "props": {
      "disabled": {
        "name": "disabled",
        "type": "Boolean",
        "required": false,
        "default": "false",
        "description": "The disabled prop"
      },
      "prefixIcon": {
        "name": "prefixIcon",
        "type": "String",
        "required": false,
        "description": "The prefixIcon prop"
      },
      "suffixIcon": {
        "name": "suffixIcon",
        "type": "String",
        "required": false,
        "description": "The suffixIcon prop"
      },
      "size": {
        "name": "size",
        "type": "String",
        "required": false,
        "default": "medium",
        "description": "The size prop"
      },
      "loading": {
        "name": "loading",
        "type": "Boolean",
        "required": false,
        "default": "false",
        "description": "The loading prop"
      },
      "primary": {
        "name": "primary",
        "type": "any",
        "required": false,
        "description": "The primary prop"
      },
      "secondary": {
        "name": "secondary",
        "type": "any",
        "required": false,
        "description": "The secondary prop"
      },
      "ghost": {
        "name": "ghost",
        "type": "any",
        "required": false,
        "description": "The ghost prop"
      },
      "danger": {
        "name": "danger",
        "type": "any",
        "required": false,
        "description": "The danger prop"
      },
      "variant": {
        "name": "variant",
        "type": "String",
        "required": false,
        "default": "primary",
        "description": "The variant prop"
      },
      "inverse": {
        "name": "inverse",
        "type": "Boolean",
        "required": false,
        "default": "false",
        "description": "The inverse prop"
      },
      "type": {
        "name": "type",
        "type": "String",
        "required": false,
        "default": "button",
        "description": "The type prop"
      },
      "name": {
        "name": "name",
        "type": "String",
        "required": false,
        "description": "The name prop"
      }
    },
    "events": {
      "click": {
        "name": "click",
        "description": "Emitted when the button is clicked and not disabled or loading",
        "params": []
      }
    },
    "methods": {
      "handleClick": {
        "name": "handleClick",
        "description": "No description provided",
        "params": []
      }
    },
    "computed": {},
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-elements-default)",
          "value": "var(--glim-color-elements-default)",
          "description": "Color token var(--glim-color-elements-default)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-elements-hover)",
          "value": "var(--glim-color-elements-hover)",
          "description": "Color token var(--glim-color-elements-hover)"
        },
        {
          "name": "var(--glim-color-elements-pressed)",
          "value": "var(--glim-color-elements-pressed)",
          "description": "Color token var(--glim-color-elements-pressed)"
        },
        {
          "name": "var(--glim-color-elements-default)",
          "value": "var(--glim-color-elements-default)",
          "description": "Color token var(--glim-color-elements-default)"
        },
        {
          "name": "var(--glim-dimension-border-focus)",
          "value": "var(--glim-dimension-border-focus)",
          "description": "Color token var(--glim-dimension-border-focus)"
        },
        {
          "name": "var(--glim-color-interaction-focus)",
          "value": "var(--glim-color-interaction-focus)",
          "description": "Color token var(--glim-color-interaction-focus)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-elements-default)",
          "value": "var(--glim-color-elements-default)",
          "description": "Color token var(--glim-color-elements-default)"
        },
        {
          "name": "var(--glim-dimension-border-focus)",
          "value": "var(--glim-dimension-border-focus)",
          "description": "Color token var(--glim-dimension-border-focus)"
        },
        {
          "name": "var(--glim-color-elements-default)",
          "value": "var(--glim-color-elements-default)",
          "description": "Color token var(--glim-color-elements-default)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-elements-hover)",
          "value": "var(--glim-color-elements-hover)",
          "description": "Color token var(--glim-color-elements-hover)"
        },
        {
          "name": "var(--glim-color-elements-hover)",
          "value": "var(--glim-color-elements-hover)",
          "description": "Color token var(--glim-color-elements-hover)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-elements-pressed)",
          "value": "var(--glim-color-elements-pressed)",
          "description": "Color token var(--glim-color-elements-pressed)"
        },
        {
          "name": "var(--glim-color-elements-pressed)",
          "value": "var(--glim-color-elements-pressed)",
          "description": "Color token var(--glim-color-elements-pressed)"
        },
        {
          "name": "var(--glim-color-text-strong)",
          "value": "var(--glim-color-text-strong)",
          "description": "Color token var(--glim-color-text-strong)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-dimension-border-focus)",
          "value": "var(--glim-dimension-border-focus)",
          "description": "Color token var(--glim-dimension-border-focus)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-text-strong)",
          "value": "var(--glim-color-text-strong)",
          "description": "Color token var(--glim-color-text-strong)"
        },
        {
          "name": "var(--glim-color-text-strong)",
          "value": "var(--glim-color-text-strong)",
          "description": "Color token var(--glim-color-text-strong)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-interaction-danger-danger)",
          "value": "var(--glim-color-interaction-danger-danger)",
          "description": "Color token var(--glim-color-interaction-danger-danger)"
        },
        {
          "name": "var(--glim-dimension-border-focus)",
          "value": "var(--glim-dimension-border-focus)",
          "description": "Color token var(--glim-dimension-border-focus)"
        },
        {
          "name": "var(--glim-color-interaction-danger-danger)",
          "value": "var(--glim-color-interaction-danger-danger)",
          "description": "Color token var(--glim-color-interaction-danger-danger)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-interaction-danger-danger-hover)",
          "value": "var(--glim-color-interaction-danger-danger-hover)",
          "description": "Color token var(--glim-color-interaction-danger-danger-hover)"
        },
        {
          "name": "var(--glim-color-interaction-danger-danger-hover)",
          "value": "var(--glim-color-interaction-danger-danger-hover)",
          "description": "Color token var(--glim-color-interaction-danger-danger-hover)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-bg-clickable-danger-danger-pressed)",
          "value": "var(--glim-color-bg-clickable-danger-danger-pressed)",
          "description": "Color token var(--glim-color-bg-clickable-danger-danger-pressed)"
        },
        {
          "name": "var(--glim-color-bg-clickable-danger-danger-pressed)",
          "value": "var(--glim-color-bg-clickable-danger-danger-pressed)",
          "description": "Color token var(--glim-color-bg-clickable-danger-danger-pressed)"
        },
        {
          "name": "var(--glim-color-elements-disabled)",
          "value": "var(--glim-color-elements-disabled)",
          "description": "Color token var(--glim-color-elements-disabled)"
        },
        {
          "name": "var(--glim-color-text-strong)",
          "value": "var(--glim-color-text-strong)",
          "description": "Color token var(--glim-color-text-strong)"
        },
        {
          "name": "var(--glim-dimension-border-focus)",
          "value": "var(--glim-dimension-border-focus)",
          "description": "Color token var(--glim-dimension-border-focus)"
        },
        {
          "name": "var(--glim-color-border-defined)",
          "value": "var(--glim-color-border-defined)",
          "description": "Color token var(--glim-color-border-defined)"
        },
        {
          "name": "var(--glim-color-interaction-hover)",
          "value": "var(--glim-color-interaction-hover)",
          "description": "Color token var(--glim-color-interaction-hover)"
        },
        {
          "name": "var(--glim-color-interaction-pressed)",
          "value": "var(--glim-color-interaction-pressed)",
          "description": "Color token var(--glim-color-interaction-pressed)"
        },
        {
          "name": "var(--glim-color-text-disabled)",
          "value": "var(--glim-color-text-disabled)",
          "description": "Color token var(--glim-color-text-disabled)"
        },
        {
          "name": "var(--glim-color-border-disabled)",
          "value": "var(--glim-color-border-disabled)",
          "description": "Color token var(--glim-color-border-disabled)"
        },
        {
          "name": "var(--glim-dimension-border-focus)",
          "value": "var(--glim-dimension-border-focus)",
          "description": "Color token var(--glim-dimension-border-focus)"
        },
        {
          "name": "var(--glim-color-interaction-focus)",
          "value": "var(--glim-color-interaction-focus)",
          "description": "Color token var(--glim-color-interaction-focus)"
        },
        {
          "name": "var(--glim-color-text-strong)",
          "value": "var(--glim-color-text-strong)",
          "description": "Color token var(--glim-color-text-strong)"
        },
        {
          "name": "var(--glim-color-interaction-hover)",
          "value": "var(--glim-color-interaction-hover)",
          "description": "Color token var(--glim-color-interaction-hover)"
        },
        {
          "name": "var(--glim-color-interaction-pressed)",
          "value": "var(--glim-color-interaction-pressed)",
          "description": "Color token var(--glim-color-interaction-pressed)"
        },
        {
          "name": "var(--glim-color-text-disabled)",
          "value": "var(--glim-color-text-disabled)",
          "description": "Color token var(--glim-color-text-disabled)"
        },
        {
          "name": "var(--glim-dimension-border-focus)",
          "value": "var(--glim-dimension-border-focus)",
          "description": "Color token var(--glim-dimension-border-focus)"
        },
        {
          "name": "var(--glim-color-interaction-focus)",
          "value": "var(--glim-color-interaction-focus)",
          "description": "Color token var(--glim-color-interaction-focus)"
        },
        {
          "name": "var(--glim-color-system-error-default)",
          "value": "var(--glim-color-system-error-default)",
          "description": "Color token var(--glim-color-system-error-default)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-system-error-strong)",
          "value": "var(--glim-color-system-error-strong)",
          "description": "Color token var(--glim-color-system-error-strong)"
        },
        {
          "name": "var(--glim-color-system-error-default)",
          "value": "var(--glim-color-system-error-default)",
          "description": "Color token var(--glim-color-system-error-default)"
        },
        {
          "name": "var(--glim-color-system-error-subtle)",
          "value": "var(--glim-color-system-error-subtle)",
          "description": "Color token var(--glim-color-system-error-subtle)"
        },
        {
          "name": "var(--glim-dimension-border-focus)",
          "value": "var(--glim-dimension-border-focus)",
          "description": "Color token var(--glim-dimension-border-focus)"
        },
        {
          "name": "var(--glim-color-interaction-focus)",
          "value": "var(--glim-color-interaction-focus)",
          "description": "Color token var(--glim-color-interaction-focus)"
        },
        {
          "name": "var(--glim-dimension-border-focus)",
          "value": "var(--glim-dimension-border-focus)",
          "description": "Color token var(--glim-dimension-border-focus)"
        },
        {
          "name": "var(--glim-dimension-border-focus)",
          "value": "var(--glim-dimension-border-focus)",
          "description": "Color token var(--glim-dimension-border-focus)"
        },
        {
          "name": "var(--glim-dimension-border-focus)",
          "value": "var(--glim-dimension-border-focus)",
          "description": "Color token var(--glim-dimension-border-focus)"
        },
        {
          "name": "var(--glim-dimension-border-focus)",
          "value": "var(--glim-dimension-border-focus)",
          "description": "Color token var(--glim-dimension-border-focus)"
        }
      ],
      "dimensions": [
        {
          "name": "var(--glim-dimension-gap-3)",
          "value": "var(--glim-dimension-gap-3)",
          "description": "Dimension token var(--glim-dimension-gap-3)"
        },
        {
          "name": "var(--glim-dimension-padding-4)",
          "value": "var(--glim-dimension-padding-4)",
          "description": "Dimension token var(--glim-dimension-padding-4)"
        },
        {
          "name": "var(--glim-dimension-padding-5)",
          "value": "var(--glim-dimension-padding-5)",
          "description": "Dimension token var(--glim-dimension-padding-5)"
        },
        {
          "name": "var(--glim-dimension-font-size-16)",
          "value": "var(--glim-dimension-font-size-16)",
          "description": "Dimension token var(--glim-dimension-font-size-16)"
        },
        {
          "name": "var(--glim-dimension-padding-3)",
          "value": "var(--glim-dimension-padding-3)",
          "description": "Dimension token var(--glim-dimension-padding-3)"
        },
        {
          "name": "var(--glim-dimension-font-size-14)",
          "value": "var(--glim-dimension-font-size-14)",
          "description": "Dimension token var(--glim-dimension-font-size-14)"
        },
        {
          "name": "var(--glim-dimension-padding-2)",
          "value": "var(--glim-dimension-padding-2)",
          "description": "Dimension token var(--glim-dimension-padding-2)"
        },
        {
          "name": "var(--glim-dimension-padding-3)",
          "value": "var(--glim-dimension-padding-3)",
          "description": "Dimension token var(--glim-dimension-padding-3)"
        },
        {
          "name": "var(--glim-dimension-font-size-12)",
          "value": "var(--glim-dimension-font-size-12)",
          "description": "Dimension token var(--glim-dimension-font-size-12)"
        },
        {
          "name": "var(--glim-dimension-padding-3)",
          "value": "var(--glim-dimension-padding-3)",
          "description": "Dimension token var(--glim-dimension-padding-3)"
        },
        {
          "name": "var(--glim-dimension-padding-3)",
          "value": "var(--glim-dimension-padding-3)",
          "description": "Dimension token var(--glim-dimension-padding-3)"
        },
        {
          "name": "var(--glim-dimension-padding-1)",
          "value": "var(--glim-dimension-padding-1)",
          "description": "Dimension token var(--glim-dimension-padding-1)"
        },
        {
          "name": "var(--glim-dimension-gap-3)",
          "value": "var(--glim-dimension-gap-3)",
          "description": "Dimension token var(--glim-dimension-gap-3)"
        }
      ],
      "strings": [
        {
          "name": "button",
          "value": "button",
          "description": "String token button"
        },
        {
          "name": "button--loading",
          "value": "button--loading",
          "description": "String token button--loading"
        },
        {
          "name": "button--disabled",
          "value": "button--disabled",
          "description": "String token button--disabled"
        },
        {
          "name": "button--inverse",
          "value": "button--inverse",
          "description": "String token button--inverse"
        },
        {
          "name": "button--icon-only",
          "value": "button--icon-only",
          "description": "String token button--icon-only"
        },
        {
          "name": "loading",
          "value": "loading",
          "description": "String token loading"
        },
        {
          "name": "disabled",
          "value": "disabled",
          "description": "String token disabled"
        },
        {
          "name": "type",
          "value": "type",
          "description": "String token type"
        },
        {
          "name": "name",
          "value": "name",
          "description": "String token name"
        },
        {
          "name": "handleClick",
          "value": "handleClick",
          "description": "String token handleClick"
        },
        {
          "name": "handleClick",
          "value": "handleClick",
          "description": "String token handleClick"
        },
        {
          "name": "handleClick",
          "value": "handleClick",
          "description": "String token handleClick"
        },
        {
          "name": "button__content-wrapper",
          "value": "button__content-wrapper",
          "description": "String token button__content-wrapper"
        },
        {
          "name": "prefixIcon",
          "value": "prefixIcon",
          "description": "String token prefixIcon"
        },
        {
          "name": "prefixIcon",
          "value": "prefixIcon",
          "description": "String token prefixIcon"
        },
        {
          "name": "iconSize",
          "value": "iconSize",
          "description": "String token iconSize"
        },
        {
          "name": "true",
          "value": "true",
          "description": "String token true"
        },
        {
          "name": "button__content",
          "value": "button__content",
          "description": "String token button__content"
        },
        {
          "name": "suffixIcon",
          "value": "suffixIcon",
          "description": "String token suffixIcon"
        },
        {
          "name": "suffixIcon",
          "value": "suffixIcon",
          "description": "String token suffixIcon"
        },
        {
          "name": "iconSize",
          "value": "iconSize",
          "description": "String token iconSize"
        },
        {
          "name": "true",
          "value": "true",
          "description": "String token true"
        },
        {
          "name": "loading",
          "value": "loading",
          "description": "String token loading"
        },
        {
          "name": "button__loader",
          "value": "button__loader",
          "description": "String token button__loader"
        },
        {
          "name": "true",
          "value": "true",
          "description": "String token true"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "secondary",
          "value": "secondary",
          "description": "String token secondary"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "arrow-right",
          "value": "arrow-right",
          "description": "String token arrow-right"
        },
        {
          "name": "large",
          "value": "large",
          "description": "String token large"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "large",
          "value": "large",
          "description": "String token large"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "large",
          "value": "large",
          "description": "String token large"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "primary",
          "value": "primary",
          "description": "String token primary"
        },
        {
          "name": "secondary",
          "value": "secondary",
          "description": "String token secondary"
        },
        {
          "name": "ghost",
          "value": "ghost",
          "description": "String token ghost"
        },
        {
          "name": "danger",
          "value": "danger",
          "description": "String token danger"
        },
        {
          "name": "primary",
          "value": "primary",
          "description": "String token primary"
        },
        {
          "name": "primary",
          "value": "primary",
          "description": "String token primary"
        },
        {
          "name": "secondary",
          "value": "secondary",
          "description": "String token secondary"
        },
        {
          "name": "ghost",
          "value": "ghost",
          "description": "String token ghost"
        },
        {
          "name": "danger",
          "value": "danger",
          "description": "String token danger"
        },
        {
          "name": "primary",
          "value": "primary",
          "description": "String token primary"
        },
        {
          "name": "primary",
          "value": "primary",
          "description": "String token primary"
        },
        {
          "name": "secondary",
          "value": "secondary",
          "description": "String token secondary"
        },
        {
          "name": "ghost",
          "value": "ghost",
          "description": "String token ghost"
        },
        {
          "name": "danger",
          "value": "danger",
          "description": "String token danger"
        },
        {
          "name": "button",
          "value": "button",
          "description": "String token button"
        },
        {
          "name": "submit",
          "value": "submit",
          "description": "String token submit"
        },
        {
          "name": "reset",
          "value": "reset",
          "description": "String token reset"
        },
        {
          "name": "button",
          "value": "button",
          "description": "String token button"
        },
        {
          "name": "button",
          "value": "button",
          "description": "String token button"
        },
        {
          "name": "submit",
          "value": "submit",
          "description": "String token submit"
        },
        {
          "name": "reset",
          "value": "reset",
          "description": "String token reset"
        },
        {
          "name": "button",
          "value": "button",
          "description": "String token button"
        },
        {
          "name": "button",
          "value": "button",
          "description": "String token button"
        },
        {
          "name": "submit",
          "value": "submit",
          "description": "String token submit"
        },
        {
          "name": "reset",
          "value": "reset",
          "description": "String token reset"
        },
        {
          "name": "click",
          "value": "click",
          "description": "String token click"
        },
        {
          "name": "click",
          "value": "click",
          "description": "String token click"
        },
        {
          "name": "css",
          "value": "css",
          "description": "String token css"
        }
      ]
    }
  },
  {
    "name": "GlimCard",
    "description": "A versatile card component for displaying content with optional image and action slots. Cards can be used for various purposes such as product cards, article previews, or feature highlights.",
    "props": {},
    "events": {},
    "methods": {},
    "computed": {
      "cardStyle": {
        "name": "cardStyle",
        "description": "No description provided",
        "type": "Object"
      }
    },
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-text-strong)",
          "value": "var(--glim-color-text-strong)",
          "description": "Color token var(--glim-color-text-strong)"
        }
      ],
      "dimensions": [
        {
          "name": "var(--glim-dimension-padding-2)",
          "value": "var(--glim-dimension-padding-2)",
          "description": "Dimension token var(--glim-dimension-padding-2)"
        },
        {
          "name": "var(--glim-dimension-padding-6)",
          "value": "var(--glim-dimension-padding-6)",
          "description": "Dimension token var(--glim-dimension-padding-6)"
        },
        {
          "name": "var(--glim-dimension-padding-2)",
          "value": "var(--glim-dimension-padding-2)",
          "description": "Dimension token var(--glim-dimension-padding-2)"
        }
      ],
      "strings": [
        {
          "name": "card",
          "value": "card",
          "description": "String token card"
        },
        {
          "name": "card--link",
          "value": "card--link",
          "description": "String token card--link"
        },
        {
          "name": "cardStyle",
          "value": "cardStyle",
          "description": "String token cardStyle"
        },
        {
          "name": "imageSrc",
          "value": "imageSrc",
          "description": "String token imageSrc"
        },
        {
          "name": "imageSrc",
          "value": "imageSrc",
          "description": "String token imageSrc"
        },
        {
          "name": "imageAspectRatio",
          "value": "imageAspectRatio",
          "description": "String token imageAspectRatio"
        },
        {
          "name": "imageOrientation",
          "value": "imageOrientation",
          "description": "String token imageOrientation"
        },
        {
          "name": "card__image",
          "value": "card__image",
          "description": "String token card__image"
        },
        {
          "name": "card__content",
          "value": "card__content",
          "description": "String token card__content"
        },
        {
          "name": "card__header",
          "value": "card__header",
          "description": "String token card__header"
        },
        {
          "name": "headerText",
          "value": "headerText",
          "description": "String token headerText"
        },
        {
          "name": "title",
          "value": "title",
          "description": "String token title"
        },
        {
          "name": "text",
          "value": "text",
          "description": "String token text"
        },
        {
          "name": "card__actions",
          "value": "card__actions",
          "description": "String token card__actions"
        },
        {
          "name": "actions",
          "value": "actions",
          "description": "String token actions"
        },
        {
          "name": "href",
          "value": "href",
          "description": "String token href"
        },
        {
          "name": "arrow-right",
          "value": "arrow-right",
          "description": "String token arrow-right"
        },
        {
          "name": "card__link-icon",
          "value": "card__link-icon",
          "description": "String token card__link-icon"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "auto",
          "value": "auto",
          "description": "String token auto"
        },
        {
          "name": "auto",
          "value": "auto",
          "description": "String token auto"
        },
        {
          "name": "1x1",
          "value": "1x1",
          "description": "String token 1x1"
        },
        {
          "name": "16x9",
          "value": "16x9",
          "description": "String token 16x9"
        },
        {
          "name": "4x3",
          "value": "4x3",
          "description": "String token 4x3"
        },
        {
          "name": "4x5",
          "value": "4x5",
          "description": "String token 4x5"
        },
        {
          "name": "3x2",
          "value": "3x2",
          "description": "String token 3x2"
        },
        {
          "name": "5x4",
          "value": "5x4",
          "description": "String token 5x4"
        },
        {
          "name": "1x1",
          "value": "1x1",
          "description": "String token 1x1"
        },
        {
          "name": "16x9",
          "value": "16x9",
          "description": "String token 16x9"
        },
        {
          "name": "4x3",
          "value": "4x3",
          "description": "String token 4x3"
        },
        {
          "name": "4x5",
          "value": "4x5",
          "description": "String token 4x5"
        },
        {
          "name": "3x2",
          "value": "3x2",
          "description": "String token 3x2"
        },
        {
          "name": "5x4",
          "value": "5x4",
          "description": "String token 5x4"
        },
        {
          "name": "landscape",
          "value": "landscape",
          "description": "String token landscape"
        },
        {
          "name": "portrait",
          "value": "portrait",
          "description": "String token portrait"
        },
        {
          "name": "landscape",
          "value": "landscape",
          "description": "String token landscape"
        },
        {
          "name": "portrait",
          "value": "portrait",
          "description": "String token portrait"
        },
        {
          "name": "Title",
          "value": "Title",
          "description": "String token Title"
        },
        {
          "name": "Text",
          "value": "Text",
          "description": "String token Text"
        },
        {
          "name": "4x3",
          "value": "4x3",
          "description": "String token 4x3"
        },
        {
          "name": "landscape",
          "value": "landscape",
          "description": "String token landscape"
        },
        {
          "name": "auto",
          "value": "auto",
          "description": "String token auto"
        },
        {
          "name": "number",
          "value": "number",
          "description": "String token number"
        },
        {
          "name": "span",
          "value": "span",
          "description": "String token span"
        },
        {
          "name": "number",
          "value": "number",
          "description": "String token number"
        },
        {
          "name": "css",
          "value": "css",
          "description": "String token css"
        }
      ]
    }
  },
  {
    "name": "GlimCheckbox",
    "description": "GlimCheckbox A checkbox component for boolean inputs with customizable label and sizing. Follows accessibility best practices and provides visual feedback for different states.",
    "props": {},
    "events": {},
    "methods": {},
    "computed": {},
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-border-defined)",
          "value": "var(--glim-color-border-defined)",
          "description": "Color token var(--glim-color-border-defined)"
        },
        {
          "name": "var(--glim-color-solid-100)",
          "value": "var(--glim-color-solid-100)",
          "description": "Color token var(--glim-color-solid-100)"
        },
        {
          "name": "var(--glim-color-interaction-focus)",
          "value": "var(--glim-color-interaction-focus)",
          "description": "Color token var(--glim-color-interaction-focus)"
        },
        {
          "name": "var(--glim-color-interaction-focus)",
          "value": "var(--glim-color-interaction-focus)",
          "description": "Color token var(--glim-color-interaction-focus)"
        },
        {
          "name": "var(--glim-color-elements-default)",
          "value": "var(--glim-color-elements-default)",
          "description": "Color token var(--glim-color-elements-default)"
        },
        {
          "name": "var(--glim-color-elements-default)",
          "value": "var(--glim-color-elements-default)",
          "description": "Color token var(--glim-color-elements-default)"
        },
        {
          "name": "var(--glim-color-border-strong)",
          "value": "var(--glim-color-border-strong)",
          "description": "Color token var(--glim-color-border-strong)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-text-strong)",
          "value": "var(--glim-color-text-strong)",
          "description": "Color token var(--glim-color-text-strong)"
        },
        {
          "name": "var(--glim-color-text-soft)",
          "value": "var(--glim-color-text-soft)",
          "description": "Color token var(--glim-color-text-soft)"
        },
        {
          "name": "var(--glim-color-feedback-error)",
          "value": "var(--glim-color-feedback-error)",
          "description": "Color token var(--glim-color-feedback-error)"
        },
        {
          "name": "var(--glim-color-feedback-success)",
          "value": "var(--glim-color-feedback-success)",
          "description": "Color token var(--glim-color-feedback-success)"
        },
        {
          "name": "var(--glim-color-feedback-error)",
          "value": "var(--glim-color-feedback-error)",
          "description": "Color token var(--glim-color-feedback-error)"
        },
        {
          "name": "var(--glim-color-feedback-success)",
          "value": "var(--glim-color-feedback-success)",
          "description": "Color token var(--glim-color-feedback-success)"
        }
      ],
      "dimensions": [
        {
          "name": "var(--glim-dimension-dimensions-unit-font-size-300)",
          "value": "var(--glim-dimension-dimensions-unit-font-size-300)",
          "description": "Dimension token var(--glim-dimension-dimensions-unit-font-size-300)"
        },
        {
          "name": "var(--glim-dimension-dimensions-unit-line-height-300)",
          "value": "var(--glim-dimension-dimensions-unit-line-height-300)",
          "description": "Dimension token var(--glim-dimension-dimensions-unit-line-height-300)"
        },
        {
          "name": "var(--glim-dimension-dimensions-unit-font-size-200)",
          "value": "var(--glim-dimension-dimensions-unit-font-size-200)",
          "description": "Dimension token var(--glim-dimension-dimensions-unit-font-size-200)"
        },
        {
          "name": "var(--glim-dimension-dimensions-unit-line-height-200)",
          "value": "var(--glim-dimension-dimensions-unit-line-height-200)",
          "description": "Dimension token var(--glim-dimension-dimensions-unit-line-height-200)"
        },
        {
          "name": "var(--glim-dimension-dimensions-unit-font-size-200)",
          "value": "var(--glim-dimension-dimensions-unit-font-size-200)",
          "description": "Dimension token var(--glim-dimension-dimensions-unit-font-size-200)"
        },
        {
          "name": "var(--glim-dimension-dimensions-unit-line-height-200)",
          "value": "var(--glim-dimension-dimensions-unit-line-height-200)",
          "description": "Dimension token var(--glim-dimension-dimensions-unit-line-height-200)"
        }
      ],
      "strings": [
        {
          "name": "isChecked",
          "value": "isChecked",
          "description": "String token isChecked"
        },
        {
          "name": "agreeToTerms",
          "value": "agreeToTerms",
          "description": "String token agreeToTerms"
        },
        {
          "name": "rememberMe",
          "value": "rememberMe",
          "description": "String token rememberMe"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "isDisabled",
          "value": "isDisabled",
          "description": "String token isDisabled"
        },
        {
          "name": "value",
          "value": "value",
          "description": "String token value"
        },
        {
          "name": "value",
          "value": "value",
          "description": "String token value"
        },
        {
          "name": "value",
          "value": "value",
          "description": "String token value"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "glim-checkbox-container",
          "value": "glim-checkbox-container",
          "description": "String token glim-checkbox-container"
        },
        {
          "name": "checkbox",
          "value": "checkbox",
          "description": "String token checkbox"
        },
        {
          "name": "checkbox--disabled",
          "value": "checkbox--disabled",
          "description": "String token checkbox--disabled"
        },
        {
          "name": "checkbox--error",
          "value": "checkbox--error",
          "description": "String token checkbox--error"
        },
        {
          "name": "checkbox--success",
          "value": "checkbox--success",
          "description": "String token checkbox--success"
        },
        {
          "name": "checkbox",
          "value": "checkbox",
          "description": "String token checkbox"
        },
        {
          "name": "modelValue",
          "value": "modelValue",
          "description": "String token modelValue"
        },
        {
          "name": "disabled",
          "value": "disabled",
          "description": "String token disabled"
        },
        {
          "name": "indeterminate",
          "value": "indeterminate",
          "description": "String token indeterminate"
        },
        {
          "name": "toggle",
          "value": "toggle",
          "description": "String token toggle"
        },
        {
          "name": "checkbox__input",
          "value": "checkbox__input",
          "description": "String token checkbox__input"
        },
        {
          "name": "checkbox__box",
          "value": "checkbox__box",
          "description": "String token checkbox__box"
        },
        {
          "name": "checkbox__check",
          "value": "checkbox__check",
          "description": "String token checkbox__check"
        },
        {
          "name": "none",
          "value": "none",
          "description": "String token none"
        },
        {
          "name": "true",
          "value": "true",
          "description": "String token true"
        },
        {
          "name": "currentColor",
          "value": "currentColor",
          "description": "String token currentColor"
        },
        {
          "name": "round",
          "value": "round",
          "description": "String token round"
        },
        {
          "name": "round",
          "value": "round",
          "description": "String token round"
        },
        {
          "name": "indeterminate",
          "value": "indeterminate",
          "description": "String token indeterminate"
        },
        {
          "name": "checkbox__indeterminate",
          "value": "checkbox__indeterminate",
          "description": "String token checkbox__indeterminate"
        },
        {
          "name": "none",
          "value": "none",
          "description": "String token none"
        },
        {
          "name": "true",
          "value": "true",
          "description": "String token true"
        },
        {
          "name": "currentColor",
          "value": "currentColor",
          "description": "String token currentColor"
        },
        {
          "name": "round",
          "value": "round",
          "description": "String token round"
        },
        {
          "name": "round",
          "value": "round",
          "description": "String token round"
        },
        {
          "name": "label",
          "value": "label",
          "description": "String token label"
        },
        {
          "name": "checkbox__label",
          "value": "checkbox__label",
          "description": "String token checkbox__label"
        },
        {
          "name": "error",
          "value": "error",
          "description": "String token error"
        },
        {
          "name": "checkbox__error",
          "value": "checkbox__error",
          "description": "String token checkbox__error"
        },
        {
          "name": "success",
          "value": "success",
          "description": "String token success"
        },
        {
          "name": "checkbox__success",
          "value": "checkbox__success",
          "description": "String token checkbox__success"
        }
      ]
    }
  },
  {
    "name": "GlimDivider",
    "description": "A versatile divider component for visual separation of content. Supports both horizontal and vertical orientations with various color strengths.",
    "props": {
      "orientation": {
        "name": "orientation",
        "type": "any",
        "required": false,
        "description": "The orientation of the divider",
        "default": "horizontal",
        "values": [
          "horizontal",
          "vertical"
        ]
      },
      "color": {
        "name": "color",
        "type": "any",
        "required": false,
        "description": "The color strength of the divider",
        "default": "defined",
        "values": [
          "strong",
          "defined",
          "soft",
          "subtle",
          "discrete",
          "disabled"
        ]
      },
      "margin": {
        "name": "margin",
        "type": "any",
        "required": false,
        "description": "Margin around the divider in pixels or CSS value",
        "default": "var(--glim-dimension-space-medium)",
        "values": [
          "string",
          "number"
        ]
      }
    },
    "events": {},
    "methods": {},
    "computed": {},
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-border-defined)",
          "value": "var(--glim-color-border-defined)",
          "description": "Color token var(--glim-color-border-defined)"
        },
        {
          "name": "var(--glim-color-border-strong)",
          "value": "var(--glim-color-border-strong)",
          "description": "Color token var(--glim-color-border-strong)"
        },
        {
          "name": "var(--glim-color-border-defined)",
          "value": "var(--glim-color-border-defined)",
          "description": "Color token var(--glim-color-border-defined)"
        },
        {
          "name": "var(--glim-color-border-soft)",
          "value": "var(--glim-color-border-soft)",
          "description": "Color token var(--glim-color-border-soft)"
        },
        {
          "name": "var(--glim-color-border-subtle)",
          "value": "var(--glim-color-border-subtle)",
          "description": "Color token var(--glim-color-border-subtle)"
        },
        {
          "name": "var(--glim-color-border-disabled)",
          "value": "var(--glim-color-border-disabled)",
          "description": "Color token var(--glim-color-border-disabled)"
        }
      ],
      "dimensions": [],
      "strings": [
        {
          "name": "divider",
          "value": "divider",
          "description": "String token divider"
        },
        {
          "name": "marginStyle",
          "value": "marginStyle",
          "description": "String token marginStyle"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "vertical",
          "value": "vertical",
          "description": "String token vertical"
        },
        {
          "name": "strong",
          "value": "strong",
          "description": "String token strong"
        },
        {
          "name": "horizontal",
          "value": "horizontal",
          "description": "String token horizontal"
        },
        {
          "name": "horizontal",
          "value": "horizontal",
          "description": "String token horizontal"
        },
        {
          "name": "vertical",
          "value": "vertical",
          "description": "String token vertical"
        },
        {
          "name": "defined",
          "value": "defined",
          "description": "String token defined"
        },
        {
          "name": "strong",
          "value": "strong",
          "description": "String token strong"
        },
        {
          "name": "defined",
          "value": "defined",
          "description": "String token defined"
        },
        {
          "name": "soft",
          "value": "soft",
          "description": "String token soft"
        },
        {
          "name": "subtle",
          "value": "subtle",
          "description": "String token subtle"
        },
        {
          "name": "discrete",
          "value": "discrete",
          "description": "String token discrete"
        },
        {
          "name": "disabled",
          "value": "disabled",
          "description": "String token disabled"
        },
        {
          "name": "horizontal",
          "value": "horizontal",
          "description": "String token horizontal"
        },
        {
          "name": "defined",
          "value": "defined",
          "description": "String token defined"
        },
        {
          "name": "number",
          "value": "number",
          "description": "String token number"
        },
        {
          "name": "horizontal",
          "value": "horizontal",
          "description": "String token horizontal"
        }
      ]
    }
  },
  {
    "name": "GlimDropdown",
    "description": "",
    "props": {},
    "events": {},
    "methods": {},
    "computed": {},
    "tokens": {
      "colors": [],
      "dimensions": [],
      "strings": [
        {
          "name": "dropdown",
          "value": "dropdown",
          "description": "String token dropdown"
        },
        {
          "name": "dropdown--expanded",
          "value": "dropdown--expanded",
          "description": "String token dropdown--expanded"
        },
        {
          "name": "dropdown__control",
          "value": "dropdown__control",
          "description": "String token dropdown__control"
        },
        {
          "name": "toggleDropdown",
          "value": "toggleDropdown",
          "description": "String token toggleDropdown"
        },
        {
          "name": "displayValue",
          "value": "displayValue",
          "description": "String token displayValue"
        },
        {
          "name": "handleInputChange",
          "value": "handleInputChange",
          "description": "String token handleInputChange"
        },
        {
          "name": "label",
          "value": "label",
          "description": "String token label"
        },
        {
          "name": "placeholder",
          "value": "placeholder",
          "description": "String token placeholder"
        },
        {
          "name": "size",
          "value": "size",
          "description": "String token size"
        },
        {
          "name": "disabled",
          "value": "disabled",
          "description": "String token disabled"
        },
        {
          "name": "error",
          "value": "error",
          "description": "String token error"
        },
        {
          "name": "success",
          "value": "success",
          "description": "String token success"
        },
        {
          "name": "prefixIcon",
          "value": "prefixIcon",
          "description": "String token prefixIcon"
        },
        {
          "name": "chevron-down",
          "value": "chevron-down",
          "description": "String token chevron-down"
        },
        {
          "name": "dropdown__input--expanded",
          "value": "dropdown__input--expanded",
          "description": "String token dropdown__input--expanded"
        },
        {
          "name": "isExpanded",
          "value": "isExpanded",
          "description": "String token isExpanded"
        },
        {
          "name": "dropdown__menu",
          "value": "dropdown__menu",
          "description": "String token dropdown__menu"
        },
        {
          "name": "processedOptions",
          "value": "processedOptions",
          "description": "String token processedOptions"
        },
        {
          "name": "handleItemClick",
          "value": "handleItemClick",
          "description": "String token handleItemClick"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "dropdown1",
          "value": "dropdown1",
          "description": "String token dropdown1"
        },
        {
          "name": "selectedOption",
          "value": "selectedOption",
          "description": "String token selectedOption"
        },
        {
          "name": "editableDropdown",
          "value": "editableDropdown",
          "description": "String token editableDropdown"
        },
        {
          "name": "selectedOption",
          "value": "selectedOption",
          "description": "String token selectedOption"
        },
        {
          "name": "dropdownOptions",
          "value": "dropdownOptions",
          "description": "String token dropdownOptions"
        },
        {
          "name": "true",
          "value": "true",
          "description": "String token true"
        },
        {
          "name": "large",
          "value": "large",
          "description": "String token large"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "Label",
          "value": "Label",
          "description": "String token Label"
        },
        {
          "name": "Placeholder",
          "value": "Placeholder",
          "description": "String token Placeholder"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "select",
          "value": "select",
          "description": "String token select"
        },
        {
          "name": "select",
          "value": "select",
          "description": "String token select"
        },
        {
          "name": "click",
          "value": "click",
          "description": "String token click"
        },
        {
          "name": "click",
          "value": "click",
          "description": "String token click"
        }
      ]
    }
  },
  {
    "name": "GlimIcon",
    "description": "GlimIcon Renders SVG icons from the Feather icon library with customizable size and color. This component provides a simple way to include consistent icons throughout the application.",
    "props": {},
    "events": {},
    "methods": {},
    "computed": {
      "colorValue": {
        "name": "colorValue",
        "description": "No description provided",
        "type": "String"
      },
      "svgContent": {
        "name": "svgContent",
        "description": "No description provided",
        "type": "String"
      }
    },
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-text-strong)",
          "value": "var(--glim-color-text-strong)",
          "description": "Color token var(--glim-color-text-strong)"
        },
        {
          "name": "var(--glim-color-text-defined)",
          "value": "var(--glim-color-text-defined)",
          "description": "Color token var(--glim-color-text-defined)"
        },
        {
          "name": "var(--glim-color-text-soft)",
          "value": "var(--glim-color-text-soft)",
          "description": "Color token var(--glim-color-text-soft)"
        },
        {
          "name": "var(--glim-color-text-disabled)",
          "value": "var(--glim-color-text-disabled)",
          "description": "Color token var(--glim-color-text-disabled)"
        },
        {
          "name": "var(--glim-color-text-discrete)",
          "value": "var(--glim-color-text-discrete)",
          "description": "Color token var(--glim-color-text-discrete)"
        }
      ],
      "dimensions": [],
      "strings": [
        {
          "name": "icon",
          "value": "icon",
          "description": "String token icon"
        },
        {
          "name": "svgContent",
          "value": "svgContent",
          "description": "String token svgContent"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "feather-icons",
          "value": "feather-icons",
          "description": "String token feather-icons"
        },
        {
          "name": "user",
          "value": "user",
          "description": "String token user"
        },
        {
          "name": "heart",
          "value": "heart",
          "description": "String token heart"
        },
        {
          "name": "red",
          "value": "red",
          "description": "String token red"
        },
        {
          "name": "star",
          "value": "star",
          "description": "String token star"
        },
        {
          "name": "currentColor",
          "value": "currentColor",
          "description": "String token currentColor"
        },
        {
          "name": "strong",
          "value": "strong",
          "description": "String token strong"
        },
        {
          "name": "defined",
          "value": "defined",
          "description": "String token defined"
        },
        {
          "name": "soft",
          "value": "soft",
          "description": "String token soft"
        },
        {
          "name": "disabled",
          "value": "disabled",
          "description": "String token disabled"
        },
        {
          "name": "discrete",
          "value": "discrete",
          "description": "String token discrete"
        },
        {
          "name": "currentColor",
          "value": "currentColor",
          "description": "String token currentColor"
        },
        {
          "name": "currentColor",
          "value": "currentColor",
          "description": "String token currentColor"
        },
        {
          "name": "strong",
          "value": "strong",
          "description": "String token strong"
        },
        {
          "name": "defined",
          "value": "defined",
          "description": "String token defined"
        },
        {
          "name": "soft",
          "value": "soft",
          "description": "String token soft"
        },
        {
          "name": "disabled",
          "value": "disabled",
          "description": "String token disabled"
        },
        {
          "name": "discrete",
          "value": "discrete",
          "description": "String token discrete"
        },
        {
          "name": "currentColor",
          "value": "currentColor",
          "description": "String token currentColor"
        },
        {
          "name": "strong",
          "value": "strong",
          "description": "String token strong"
        },
        {
          "name": "defined",
          "value": "defined",
          "description": "String token defined"
        },
        {
          "name": "soft",
          "value": "soft",
          "description": "String token soft"
        },
        {
          "name": "disabled",
          "value": "disabled",
          "description": "String token disabled"
        },
        {
          "name": "discrete",
          "value": "discrete",
          "description": "String token discrete"
        },
        {
          "name": "currentColor",
          "value": "currentColor",
          "description": "String token currentColor"
        },
        {
          "name": "GlimIcon",
          "value": "GlimIcon",
          "description": "String token GlimIcon"
        },
        {
          "name": "string",
          "value": "string",
          "description": "String token string"
        },
        {
          "name": "number",
          "value": "number",
          "description": "String token number"
        },
        {
          "name": "string",
          "value": "string",
          "description": "String token string"
        },
        {
          "name": "currentColor",
          "value": "currentColor",
          "description": "String token currentColor"
        },
        {
          "name": "currentColor",
          "value": "currentColor",
          "description": "String token currentColor"
        },
        {
          "name": "strong",
          "value": "strong",
          "description": "String token strong"
        },
        {
          "name": "defined",
          "value": "defined",
          "description": "String token defined"
        },
        {
          "name": "soft",
          "value": "soft",
          "description": "String token soft"
        },
        {
          "name": "disabled",
          "value": "disabled",
          "description": "String token disabled"
        },
        {
          "name": "discrete",
          "value": "discrete",
          "description": "String token discrete"
        }
      ]
    }
  },
  {
    "name": "GlimImage",
    "description": "GlimImage A responsive image component that maintains aspect ratio and supports various image formats. Handles different aspect ratios and orientations, and provides a placeholder when no image is available.",
    "props": {},
    "events": {},
    "methods": {},
    "computed": {},
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-color-solid-300)",
          "value": "var(--glim-color-color-solid-300)",
          "description": "Color token var(--glim-color-color-solid-300)"
        }
      ],
      "dimensions": [
        {
          "name": "var(--glim-aspect-ratio-padding)",
          "value": "var(--glim-aspect-ratio-padding)",
          "description": "Dimension token var(--glim-aspect-ratio-padding)"
        }
      ],
      "strings": [
        {
          "name": "image-container",
          "value": "image-container",
          "description": "String token image-container"
        },
        {
          "name": "image-container--portrait",
          "value": "image-container--portrait",
          "description": "String token image-container--portrait"
        },
        {
          "name": "GlimImage",
          "value": "GlimImage",
          "description": "String token GlimImage"
        },
        {
          "name": "src",
          "value": "src",
          "description": "String token src"
        },
        {
          "name": "src",
          "value": "src",
          "description": "String token src"
        },
        {
          "name": "alt",
          "value": "alt",
          "description": "String token alt"
        },
        {
          "name": "image",
          "value": "image",
          "description": "String token image"
        },
        {
          "name": "backgroundColor",
          "value": "backgroundColor",
          "description": "String token backgroundColor"
        },
        {
          "name": "image-background",
          "value": "image-background",
          "description": "String token image-background"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "4x5",
          "value": "4x5",
          "description": "String token 4x5"
        },
        {
          "name": "portrait",
          "value": "portrait",
          "description": "String token portrait"
        },
        {
          "name": "1x1",
          "value": "1x1",
          "description": "String token 1x1"
        },
        {
          "name": "1x1",
          "value": "1x1",
          "description": "String token 1x1"
        },
        {
          "name": "16x9",
          "value": "16x9",
          "description": "String token 16x9"
        },
        {
          "name": "4x3",
          "value": "4x3",
          "description": "String token 4x3"
        },
        {
          "name": "4x5",
          "value": "4x5",
          "description": "String token 4x5"
        },
        {
          "name": "3x2",
          "value": "3x2",
          "description": "String token 3x2"
        },
        {
          "name": "5x4",
          "value": "5x4",
          "description": "String token 5x4"
        },
        {
          "name": "1x1",
          "value": "1x1",
          "description": "String token 1x1"
        },
        {
          "name": "16x9",
          "value": "16x9",
          "description": "String token 16x9"
        },
        {
          "name": "4x3",
          "value": "4x3",
          "description": "String token 4x3"
        },
        {
          "name": "4x5",
          "value": "4x5",
          "description": "String token 4x5"
        },
        {
          "name": "3x2",
          "value": "3x2",
          "description": "String token 3x2"
        },
        {
          "name": "5x4",
          "value": "5x4",
          "description": "String token 5x4"
        },
        {
          "name": "landscape",
          "value": "landscape",
          "description": "String token landscape"
        },
        {
          "name": "portrait",
          "value": "portrait",
          "description": "String token portrait"
        },
        {
          "name": "landscape",
          "value": "landscape",
          "description": "String token landscape"
        },
        {
          "name": "portrait",
          "value": "portrait",
          "description": "String token portrait"
        },
        {
          "name": "16x9",
          "value": "16x9",
          "description": "String token 16x9"
        },
        {
          "name": "landscape",
          "value": "landscape",
          "description": "String token landscape"
        },
        {
          "name": "transparent",
          "value": "transparent",
          "description": "String token transparent"
        },
        {
          "name": "16x9",
          "value": "16x9",
          "description": "String token 16x9"
        },
        {
          "name": "landscape",
          "value": "landscape",
          "description": "String token landscape"
        },
        {
          "name": "transparent",
          "value": "transparent",
          "description": "String token transparent"
        },
        {
          "name": "portrait",
          "value": "portrait",
          "description": "String token portrait"
        },
        {
          "name": "portrait",
          "value": "portrait",
          "description": "String token portrait"
        },
        {
          "name": "css",
          "value": "css",
          "description": "String token css"
        }
      ]
    }
  },
  {
    "name": "GlimInput",
    "description": "A form input component with support for various states, icons, and validation. Provides a consistent interface for text input with built-in error handling and visual feedback.",
    "props": {},
    "events": {
      "update:modelValue": {
        "name": "update:modelValue",
        "description": "The update:modelValue event",
        "params": []
      },
      "focus": {
        "name": "focus",
        "description": "The focus event",
        "params": []
      },
      "blur": {
        "name": "blur",
        "description": "The blur event",
        "params": []
      }
    },
    "methods": {},
    "computed": {
      "iconSize": {
        "name": "iconSize",
        "description": "No description provided",
        "type": "Number"
      }
    },
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-border-disabled)",
          "value": "var(--glim-color-border-disabled)",
          "description": "Color token var(--glim-color-border-disabled)"
        },
        {
          "name": "var(--glim-color-border-strong)",
          "value": "var(--glim-color-border-strong)",
          "description": "Color token var(--glim-color-border-strong)"
        },
        {
          "name": "var(--glim-color-text-strong)",
          "value": "var(--glim-color-text-strong)",
          "description": "Color token var(--glim-color-text-strong)"
        },
        {
          "name": "var(--glim-color-interaction-focus)",
          "value": "var(--glim-color-interaction-focus)",
          "description": "Color token var(--glim-color-interaction-focus)"
        },
        {
          "name": "var(--glim-color-interaction-focus)",
          "value": "var(--glim-color-interaction-focus)",
          "description": "Color token var(--glim-color-interaction-focus)"
        },
        {
          "name": "var(--glim-color-text-soft)",
          "value": "var(--glim-color-text-soft)",
          "description": "Color token var(--glim-color-text-soft)"
        },
        {
          "name": "var(--glim-color-system-danger-default)",
          "value": "var(--glim-color-system-danger-default)",
          "description": "Color token var(--glim-color-system-danger-default)"
        },
        {
          "name": "var(--glim-color-system-success-default)",
          "value": "var(--glim-color-system-success-default)",
          "description": "Color token var(--glim-color-system-success-default)"
        },
        {
          "name": "var(--glim-color-text-soft)",
          "value": "var(--glim-color-text-soft)",
          "description": "Color token var(--glim-color-text-soft)"
        },
        {
          "name": "var(--glim-color-system-danger-default)",
          "value": "var(--glim-color-system-danger-default)",
          "description": "Color token var(--glim-color-system-danger-default)"
        },
        {
          "name": "var(--glim-color-system-success-default)",
          "value": "var(--glim-color-system-success-default)",
          "description": "Color token var(--glim-color-system-success-default)"
        },
        {
          "name": "var(--glim-color-elements-disabled)",
          "value": "var(--glim-color-elements-disabled)",
          "description": "Color token var(--glim-color-elements-disabled)"
        },
        {
          "name": "var(--glim-color-border-defined)",
          "value": "var(--glim-color-border-defined)",
          "description": "Color token var(--glim-color-border-defined)"
        },
        {
          "name": "var(--glim-color-text-disabled)",
          "value": "var(--glim-color-text-disabled)",
          "description": "Color token var(--glim-color-text-disabled)"
        },
        {
          "name": "var(--glim-color-text-strong)",
          "value": "var(--glim-color-text-strong)",
          "description": "Color token var(--glim-color-text-strong)"
        }
      ],
      "dimensions": [
        {
          "name": "var(--glim-dimension-padding-2)",
          "value": "var(--glim-dimension-padding-2)",
          "description": "Dimension token var(--glim-dimension-padding-2)"
        },
        {
          "name": "var(--glim-dimension-padding-2)",
          "value": "var(--glim-dimension-padding-2)",
          "description": "Dimension token var(--glim-dimension-padding-2)"
        },
        {
          "name": "var(--glim-dimension-padding-2)",
          "value": "var(--glim-dimension-padding-2)",
          "description": "Dimension token var(--glim-dimension-padding-2)"
        },
        {
          "name": "var(--glim-dimension-padding-2)",
          "value": "var(--glim-dimension-padding-2)",
          "description": "Dimension token var(--glim-dimension-padding-2)"
        },
        {
          "name": "var(--glim-dimension-padding-2)",
          "value": "var(--glim-dimension-padding-2)",
          "description": "Dimension token var(--glim-dimension-padding-2)"
        },
        {
          "name": "var(--glim-line-height-medium)",
          "value": "var(--glim-line-height-medium)",
          "description": "Dimension token var(--glim-line-height-medium)"
        },
        {
          "name": "var(--glim-line-height-small)",
          "value": "var(--glim-line-height-small)",
          "description": "Dimension token var(--glim-line-height-small)"
        },
        {
          "name": "var(--glim-line-height-xsmall)",
          "value": "var(--glim-line-height-xsmall)",
          "description": "Dimension token var(--glim-line-height-xsmall)"
        },
        {
          "name": "var(--glim-line-height-small)",
          "value": "var(--glim-line-height-small)",
          "description": "Dimension token var(--glim-line-height-small)"
        }
      ],
      "strings": [
        {
          "name": "input-wrapper",
          "value": "input-wrapper",
          "description": "String token input-wrapper"
        },
        {
          "name": "input-wrapper--error",
          "value": "input-wrapper--error",
          "description": "String token input-wrapper--error"
        },
        {
          "name": "input-wrapper--success",
          "value": "input-wrapper--success",
          "description": "String token input-wrapper--success"
        },
        {
          "name": "input-wrapper--disabled",
          "value": "input-wrapper--disabled",
          "description": "String token input-wrapper--disabled"
        },
        {
          "name": "label",
          "value": "label",
          "description": "String token label"
        },
        {
          "name": "input__container",
          "value": "input__container",
          "description": "String token input__container"
        },
        {
          "name": "prefixIcon",
          "value": "prefixIcon",
          "description": "String token prefixIcon"
        },
        {
          "name": "prefixIcon",
          "value": "prefixIcon",
          "description": "String token prefixIcon"
        },
        {
          "name": "localValue",
          "value": "localValue",
          "description": "String token localValue"
        },
        {
          "name": "type",
          "value": "type",
          "description": "String token type"
        },
        {
          "name": "placeholder",
          "value": "placeholder",
          "description": "String token placeholder"
        },
        {
          "name": "disabled",
          "value": "disabled",
          "description": "String token disabled"
        },
        {
          "name": "readonly",
          "value": "readonly",
          "description": "String token readonly"
        },
        {
          "name": "input__field--readonly",
          "value": "input__field--readonly",
          "description": "String token input__field--readonly"
        },
        {
          "name": "focus",
          "value": "focus",
          "description": "String token focus"
        },
        {
          "name": "blur",
          "value": "blur",
          "description": "String token blur"
        },
        {
          "name": "showClearButton",
          "value": "showClearButton",
          "description": "String token showClearButton"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "ghost",
          "value": "ghost",
          "description": "String token ghost"
        },
        {
          "name": "input__clear-button",
          "value": "input__clear-button",
          "description": "String token input__clear-button"
        },
        {
          "name": "input__clear-button--hidden",
          "value": "input__clear-button--hidden",
          "description": "String token input__clear-button--hidden"
        },
        {
          "name": "clearInput",
          "value": "clearInput",
          "description": "String token clearInput"
        },
        {
          "name": "suffixIcon",
          "value": "suffixIcon",
          "description": "String token suffixIcon"
        },
        {
          "name": "suffixIcon",
          "value": "suffixIcon",
          "description": "String token suffixIcon"
        },
        {
          "name": "suffix",
          "value": "suffix",
          "description": "String token suffix"
        },
        {
          "name": "error",
          "value": "error",
          "description": "String token error"
        },
        {
          "name": "alert",
          "value": "alert",
          "description": "String token alert"
        },
        {
          "name": "success",
          "value": "success",
          "description": "String token success"
        },
        {
          "name": "hint",
          "value": "hint",
          "description": "String token hint"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "modelValue",
          "value": "modelValue",
          "description": "String token modelValue"
        },
        {
          "name": "Username",
          "value": "Username",
          "description": "String token Username"
        },
        {
          "name": "email",
          "value": "email",
          "description": "String token email"
        },
        {
          "name": "email",
          "value": "email",
          "description": "String token email"
        },
        {
          "name": "mail",
          "value": "mail",
          "description": "String token mail"
        },
        {
          "name": "search",
          "value": "search",
          "description": "String token search"
        },
        {
          "name": "search",
          "value": "search",
          "description": "String token search"
        },
        {
          "name": "Label",
          "value": "Label",
          "description": "String token Label"
        },
        {
          "name": "Placeholder",
          "value": "Placeholder",
          "description": "String token Placeholder"
        },
        {
          "name": "text",
          "value": "text",
          "description": "String token text"
        },
        {
          "name": "large",
          "value": "large",
          "description": "String token large"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "large",
          "value": "large",
          "description": "String token large"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "Label",
          "value": "Label",
          "description": "String token Label"
        },
        {
          "name": "Placeholder",
          "value": "Placeholder",
          "description": "String token Placeholder"
        },
        {
          "name": "text",
          "value": "text",
          "description": "String token text"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "focus",
          "value": "focus",
          "description": "String token focus"
        },
        {
          "name": "blur",
          "value": "blur",
          "description": "String token blur"
        },
        {
          "name": "large",
          "value": "large",
          "description": "String token large"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        }
      ]
    }
  },
  {
    "name": "GlimMenu",
    "description": "GlimMenu A menu component that displays a list of selectable items. Used for dropdown menus, context menus, and other selection interfaces.",
    "props": {
      "items": {
        "name": "items",
        "type": "any",
        "required": true,
        "description": "Array of menu items to display"
      }
    },
    "events": {},
    "methods": {},
    "computed": {},
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-elevation-background-inverse)",
          "value": "var(--glim-color-elevation-background-inverse)",
          "description": "Color token var(--glim-color-elevation-background-inverse)"
        },
        {
          "name": "var(--glim-color-text-soft-inverse)",
          "value": "var(--glim-color-text-soft-inverse)",
          "description": "Color token var(--glim-color-text-soft-inverse)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-interaction-hover-inverse)",
          "value": "var(--glim-color-interaction-hover-inverse)",
          "description": "Color token var(--glim-color-interaction-hover-inverse)"
        },
        {
          "name": "var(--glim-color-solid-700)",
          "value": "var(--glim-color-solid-700)",
          "description": "Color token var(--glim-color-solid-700)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        }
      ],
      "dimensions": [
        {
          "name": "var(--glim-dimension-padding-1)",
          "value": "var(--glim-dimension-padding-1)",
          "description": "Dimension token var(--glim-dimension-padding-1)"
        },
        {
          "name": "var(--glim-dimension-padding-2)",
          "value": "var(--glim-dimension-padding-2)",
          "description": "Dimension token var(--glim-dimension-padding-2)"
        }
      ],
      "strings": [
        {
          "name": "menu",
          "value": "menu",
          "description": "String token menu"
        },
        {
          "name": "GlimMenu",
          "value": "GlimMenu",
          "description": "String token GlimMenu"
        },
        {
          "name": "index",
          "value": "index",
          "description": "String token index"
        },
        {
          "name": "menu__item",
          "value": "menu__item",
          "description": "String token menu__item"
        },
        {
          "name": "menu__item--selected",
          "value": "menu__item--selected",
          "description": "String token menu__item--selected"
        },
        {
          "name": "click",
          "value": "click",
          "description": "String token click"
        },
        {
          "name": "menu__item-content",
          "value": "menu__item-content",
          "description": "String token menu__item-content"
        },
        {
          "name": "check",
          "value": "check",
          "description": "String token check"
        },
        {
          "name": "handleItemClick",
          "value": "handleItemClick",
          "description": "String token handleItemClick"
        },
        {
          "name": "menuOptions",
          "value": "menuOptions",
          "description": "String token menuOptions"
        },
        {
          "name": "click",
          "value": "click",
          "description": "String token click"
        }
      ]
    }
  },
  {
    "name": "GlimMessage",
    "description": "",
    "props": {},
    "events": {},
    "methods": {},
    "computed": {},
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-elevation-background-inverse)",
          "value": "var(--glim-color-elevation-background-inverse)",
          "description": "Color token var(--glim-color-elevation-background-inverse)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-system-info-strong)",
          "value": "var(--glim-color-system-info-strong)",
          "description": "Color token var(--glim-color-system-info-strong)"
        },
        {
          "name": "var(--glim-color-system-success-strong)",
          "value": "var(--glim-color-system-success-strong)",
          "description": "Color token var(--glim-color-system-success-strong)"
        },
        {
          "name": "var(--glim-color-system-warning-strong)",
          "value": "var(--glim-color-system-warning-strong)",
          "description": "Color token var(--glim-color-system-warning-strong)"
        },
        {
          "name": "var(--glim-color-system-error-strong)",
          "value": "var(--glim-color-system-error-strong)",
          "description": "Color token var(--glim-color-system-error-strong)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        },
        {
          "name": "var(--glim-color-text-soft-inverse)",
          "value": "var(--glim-color-text-soft-inverse)",
          "description": "Color token var(--glim-color-text-soft-inverse)"
        }
      ],
      "dimensions": [
        {
          "name": "var(--glim-dimension-gap-2)",
          "value": "var(--glim-dimension-gap-2)",
          "description": "Dimension token var(--glim-dimension-gap-2)"
        },
        {
          "name": "var(--glim-dimension-padding-5)",
          "value": "var(--glim-dimension-padding-5)",
          "description": "Dimension token var(--glim-dimension-padding-5)"
        },
        {
          "name": "var(--glim-dimension-gap-1)",
          "value": "var(--glim-dimension-gap-1)",
          "description": "Dimension token var(--glim-dimension-gap-1)"
        }
      ],
      "strings": [
        {
          "name": "message",
          "value": "message",
          "description": "String token message"
        },
        {
          "name": "GlimMessage",
          "value": "GlimMessage",
          "description": "String token GlimMessage"
        },
        {
          "name": "message__icon",
          "value": "message__icon",
          "description": "String token message__icon"
        },
        {
          "name": "getIconFromVariant",
          "value": "getIconFromVariant",
          "description": "String token getIconFromVariant"
        },
        {
          "name": "message__content",
          "value": "message__content",
          "description": "String token message__content"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "info",
          "value": "info",
          "description": "String token info"
        },
        {
          "name": "success",
          "value": "success",
          "description": "String token success"
        },
        {
          "name": "warning",
          "value": "warning",
          "description": "String token warning"
        },
        {
          "name": "error",
          "value": "error",
          "description": "String token error"
        },
        {
          "name": "success",
          "value": "success",
          "description": "String token success"
        },
        {
          "name": "check-circle",
          "value": "check-circle",
          "description": "String token check-circle"
        },
        {
          "name": "warning",
          "value": "warning",
          "description": "String token warning"
        },
        {
          "name": "alert-triangle",
          "value": "alert-triangle",
          "description": "String token alert-triangle"
        },
        {
          "name": "error",
          "value": "error",
          "description": "String token error"
        },
        {
          "name": "alert-circle",
          "value": "alert-circle",
          "description": "String token alert-circle"
        },
        {
          "name": "info",
          "value": "info",
          "description": "String token info"
        },
        {
          "name": "info",
          "value": "info",
          "description": "String token info"
        },
        {
          "name": "GlimMessage",
          "value": "GlimMessage",
          "description": "String token GlimMessage"
        }
      ]
    }
  },
  {
    "name": "GlimProgressBar",
    "description": "GlimProgressBar A progress bar component that can show determinate progress or an indeterminate loading state / import { computed } from 'vue'; const props = defineProps({ /** Current progress value (0-100) / value: { type: Number, required: true, default: 0, validator: (value: number) => value >= 0 && value <= 100 }, /** Whether to show the progress value as a percentage / showValue: { type: Boolean, default: false }, /** Size variant of the progress bar / size: { type: String as () => 'small' | 'medium' | 'large', default: 'medium', validator: (value: string) => ['small', 'medium', 'large'].includes(value) }, /** Whether the progress bar is indeterminate / indeterminate: { type: Boolean, default: false }, /** Custom height for the progress bar",
    "props": {
      "value": {
        "name": "value",
        "type": "Number",
        "required": true,
        "default": "0",
        "description": "The value prop"
      },
      "showValue": {
        "name": "showValue",
        "type": "Boolean",
        "required": false,
        "default": "false",
        "description": "The showValue prop"
      },
      "size": {
        "name": "size",
        "type": "String",
        "required": false,
        "default": "medium",
        "description": "The size prop"
      },
      "indeterminate": {
        "name": "indeterminate",
        "type": "Boolean",
        "required": false,
        "default": "false",
        "description": "The indeterminate prop"
      },
      "height": {
        "name": "height",
        "type": "any",
        "required": false,
        "default": "8px",
        "description": "The height prop"
      }
    },
    "events": {},
    "methods": {},
    "computed": {},
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-solid-200)",
          "value": "var(--glim-color-solid-200)",
          "description": "Color token var(--glim-color-solid-200)"
        },
        {
          "name": "var(--glim-color-transparent-strong)",
          "value": "var(--glim-color-transparent-strong)",
          "description": "Color token var(--glim-color-transparent-strong)"
        }
      ],
      "dimensions": [],
      "strings": [
        {
          "name": "progress-bar-container",
          "value": "progress-bar-container",
          "description": "String token progress-bar-container"
        },
        {
          "name": "progress-bar",
          "value": "progress-bar",
          "description": "String token progress-bar"
        },
        {
          "name": "progress-bar__fill",
          "value": "progress-bar__fill",
          "description": "String token progress-bar__fill"
        },
        {
          "name": "progress-bar__fill--looping",
          "value": "progress-bar__fill--looping",
          "description": "String token progress-bar__fill--looping"
        },
        {
          "name": "progress-bar__fill--progress",
          "value": "progress-bar__fill--progress",
          "description": "String token progress-bar__fill--progress"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "large",
          "value": "large",
          "description": "String token large"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "medium",
          "value": "medium",
          "description": "String token medium"
        },
        {
          "name": "large",
          "value": "large",
          "description": "String token large"
        },
        {
          "name": "8px",
          "value": "8px",
          "description": "String token 8px"
        },
        {
          "name": "1rem",
          "value": "1rem",
          "description": "String token 1rem"
        },
        {
          "name": "8px",
          "value": "8px",
          "description": "String token 8px"
        }
      ]
    }
  },
  {
    "name": "GlimSegmentedControls",
    "description": "A component that provides a set of mutually exclusive options, similar to radio buttons but with a cohesive, button-like appearance. Commonly used for switching between views or toggling related options.",
    "props": {
      "modelValue": {
        "name": "modelValue",
        "type": "any",
        "required": true,
        "description": "The selected value, should match an item's id",
        "values": [
          "string",
          "number"
        ]
      },
      "items": {
        "name": "items",
        "type": "any",
        "required": true,
        "description": "Array of items to display as segments",
        "default": "() => ["
      },
      "size": {
        "name": "size",
        "type": "any",
        "required": false,
        "description": "Size of the segmented controls",
        "default": "default",
        "values": [
          "small",
          "default"
        ]
      }
    },
    "events": {
      "update:modelValue": {
        "name": "update:modelValue",
        "description": "Emitted when the selected segment changes",
        "params": []
      }
    },
    "methods": {},
    "computed": {},
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-solid-200)",
          "value": "var(--glim-color-solid-200)",
          "description": "Color token var(--glim-color-solid-200)"
        },
        {
          "name": "var(--glim-color-elevation-base)",
          "value": "var(--glim-color-elevation-base)",
          "description": "Color token var(--glim-color-elevation-base)"
        },
        {
          "name": "var(--glim-color-text-soft)",
          "value": "var(--glim-color-text-soft)",
          "description": "Color token var(--glim-color-text-soft)"
        },
        {
          "name": "var(--glim-color-text-soft)",
          "value": "var(--glim-color-text-soft)",
          "description": "Color token var(--glim-color-text-soft)"
        },
        {
          "name": "var(--glim-color-text-strong)",
          "value": "var(--glim-color-text-strong)",
          "description": "Color token var(--glim-color-text-strong)"
        }
      ],
      "dimensions": [
        {
          "name": "var(--glim-dimension-padding-1)",
          "value": "var(--glim-dimension-padding-1)",
          "description": "Dimension token var(--glim-dimension-padding-1)"
        },
        {
          "name": "var(--glim-dimension-padding-1)",
          "value": "var(--glim-dimension-padding-1)",
          "description": "Dimension token var(--glim-dimension-padding-1)"
        },
        {
          "name": "var(--glim-dimension-padding-2)",
          "value": "var(--glim-dimension-padding-2)",
          "description": "Dimension token var(--glim-dimension-padding-2)"
        }
      ],
      "strings": [
        {
          "name": "selectedOption",
          "value": "selectedOption",
          "description": "String token selectedOption"
        },
        {
          "name": "day",
          "value": "day",
          "description": "String token day"
        },
        {
          "name": "Day",
          "value": "Day",
          "description": "String token Day"
        },
        {
          "name": "week",
          "value": "week",
          "description": "String token week"
        },
        {
          "name": "Week",
          "value": "Week",
          "description": "String token Week"
        },
        {
          "name": "month",
          "value": "month",
          "description": "String token month"
        },
        {
          "name": "Month",
          "value": "Month",
          "description": "String token Month"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "option1",
          "value": "option1",
          "description": "String token option1"
        },
        {
          "name": "option2",
          "value": "option2",
          "description": "String token option2"
        },
        {
          "name": "option3",
          "value": "option3",
          "description": "String token option3"
        },
        {
          "name": "auto",
          "value": "auto",
          "description": "String token auto"
        },
        {
          "name": "segmented-controls__item--disabled",
          "value": "segmented-controls__item--disabled",
          "description": "String token segmented-controls__item--disabled"
        },
        {
          "name": "segmented-controls__item--disabled",
          "value": "segmented-controls__item--disabled",
          "description": "String token segmented-controls__item--disabled"
        },
        {
          "name": "segmented-controls",
          "value": "segmented-controls",
          "description": "String token segmented-controls"
        },
        {
          "name": "radiogroup",
          "value": "radiogroup",
          "description": "String token radiogroup"
        },
        {
          "name": "segmentControls",
          "value": "segmentControls",
          "description": "String token segmentControls"
        },
        {
          "name": "segmented-controls__background",
          "value": "segmented-controls__background",
          "description": "String token segmented-controls__background"
        },
        {
          "name": "segmented-controls__background--small",
          "value": "segmented-controls__background--small",
          "description": "String token segmented-controls__background--small"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "backgroundStyle",
          "value": "backgroundStyle",
          "description": "String token backgroundStyle"
        },
        {
          "name": "segmented-controls__item",
          "value": "segmented-controls__item",
          "description": "String token segmented-controls__item"
        },
        {
          "name": "segmented-controls__item--active",
          "value": "segmented-controls__item--active",
          "description": "String token segmented-controls__item--active"
        },
        {
          "name": "segmented-controls__item--disabled",
          "value": "segmented-controls__item--disabled",
          "description": "String token segmented-controls__item--disabled"
        },
        {
          "name": "radio",
          "value": "radio",
          "description": "String token radio"
        }
      ]
    }
  },
  {
    "name": "GlimSlider",
    "description": "GlimSlider An interactive slider component for selecting a value within a range. Features a draggable thumb, visual track/rail, and tooltip showing the current value.",
    "props": {},
    "events": {
      "update:progress": {
        "name": "update:progress",
        "description": "Emitted continuously as the slider value changes",
        "params": []
      },
      "change": {
        "name": "change",
        "description": "Emitted when the user stops dragging the slider",
        "params": []
      }
    },
    "methods": {},
    "computed": {
      "percentage": {
        "name": "percentage",
        "description": "No description provided",
        "type": "Number"
      },
      "displayValue": {
        "name": "displayValue",
        "description": "No description provided",
        "type": "Number"
      }
    },
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-solid-200)",
          "value": "var(--glim-color-solid-200)",
          "description": "Color token var(--glim-color-solid-200)"
        },
        {
          "name": "var(--glim-color-border-strong)",
          "value": "var(--glim-color-border-strong)",
          "description": "Color token var(--glim-color-border-strong)"
        }
      ],
      "dimensions": [],
      "strings": [
        {
          "name": "slider",
          "value": "slider",
          "description": "String token slider"
        },
        {
          "name": "slider--dragging",
          "value": "slider--dragging",
          "description": "String token slider--dragging"
        },
        {
          "name": "slider--disabled",
          "value": "slider--disabled",
          "description": "String token slider--disabled"
        },
        {
          "name": "sliderEl",
          "value": "sliderEl",
          "description": "String token sliderEl"
        },
        {
          "name": "slider__rail",
          "value": "slider__rail",
          "description": "String token slider__rail"
        },
        {
          "name": "railEl",
          "value": "railEl",
          "description": "String token railEl"
        },
        {
          "name": "startDrag",
          "value": "startDrag",
          "description": "String token startDrag"
        },
        {
          "name": "startDrag",
          "value": "startDrag",
          "description": "String token startDrag"
        },
        {
          "name": "slider__filler",
          "value": "slider__filler",
          "description": "String token slider__filler"
        },
        {
          "name": "slider__line",
          "value": "slider__line",
          "description": "String token slider__line"
        },
        {
          "name": "slider__grabber",
          "value": "slider__grabber",
          "description": "String token slider__grabber"
        },
        {
          "name": "startDrag",
          "value": "startDrag",
          "description": "String token startDrag"
        },
        {
          "name": "startDrag",
          "value": "startDrag",
          "description": "String token startDrag"
        },
        {
          "name": "slider__thumb",
          "value": "slider__thumb",
          "description": "String token slider__thumb"
        },
        {
          "name": "slider__circle",
          "value": "slider__circle",
          "description": "String token slider__circle"
        },
        {
          "name": "slider__tooltip",
          "value": "slider__tooltip",
          "description": "String token slider__tooltip"
        },
        {
          "name": "slider__tooltip--visible",
          "value": "slider__tooltip--visible",
          "description": "String token slider__tooltip--visible"
        },
        {
          "name": "isDragging",
          "value": "isDragging",
          "description": "String token isDragging"
        },
        {
          "name": "slider__tooltip-text",
          "value": "slider__tooltip-text",
          "description": "String token slider__tooltip-text"
        },
        {
          "name": "top",
          "value": "top",
          "description": "String token top"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "change",
          "value": "change",
          "description": "String token change"
        },
        {
          "name": "mousemove",
          "value": "mousemove",
          "description": "String token mousemove"
        },
        {
          "name": "touchmove",
          "value": "touchmove",
          "description": "String token touchmove"
        },
        {
          "name": "mouseup",
          "value": "mouseup",
          "description": "String token mouseup"
        },
        {
          "name": "touchend",
          "value": "touchend",
          "description": "String token touchend"
        },
        {
          "name": "clientX",
          "value": "clientX",
          "description": "String token clientX"
        },
        {
          "name": "touches",
          "value": "touches",
          "description": "String token touches"
        },
        {
          "name": "mousemove",
          "value": "mousemove",
          "description": "String token mousemove"
        },
        {
          "name": "touchmove",
          "value": "touchmove",
          "description": "String token touchmove"
        },
        {
          "name": "mouseup",
          "value": "mouseup",
          "description": "String token mouseup"
        },
        {
          "name": "touchend",
          "value": "touchend",
          "description": "String token touchend"
        },
        {
          "name": "change",
          "value": "change",
          "description": "String token change"
        },
        {
          "name": "mousemove",
          "value": "mousemove",
          "description": "String token mousemove"
        },
        {
          "name": "touchmove",
          "value": "touchmove",
          "description": "String token touchmove"
        },
        {
          "name": "mouseup",
          "value": "mouseup",
          "description": "String token mouseup"
        },
        {
          "name": "touchend",
          "value": "touchend",
          "description": "String token touchend"
        }
      ]
    }
  },
  {
    "name": "GlimSpinner",
    "description": "GlimSpinner A loading spinner component that provides visual feedback during asynchronous operations. The spinner can be customized with different sizes and colors.",
    "props": {
      "size": {
        "name": "size",
        "type": "any",
        "required": false,
        "default": "24",
        "description": "The size prop"
      },
      "color": {
        "name": "color",
        "type": "String",
        "required": false,
        "default": "currentColor",
        "description": "The color prop"
      }
    },
    "events": {},
    "methods": {},
    "computed": {},
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-primary)",
          "value": "var(--glim-color-primary)",
          "description": "Color token var(--glim-color-primary)"
        }
      ],
      "dimensions": [],
      "strings": [
        {
          "name": "spinner",
          "value": "spinner",
          "description": "String token spinner"
        },
        {
          "name": "number",
          "value": "number",
          "description": "String token number"
        },
        {
          "name": "number",
          "value": "number",
          "description": "String token number"
        },
        {
          "name": "sr-only",
          "value": "sr-only",
          "description": "String token sr-only"
        },
        {
          "name": "32px",
          "value": "32px",
          "description": "String token 32px"
        },
        {
          "name": "currentColor",
          "value": "currentColor",
          "description": "String token currentColor"
        },
        {
          "name": "currentColor",
          "value": "currentColor",
          "description": "String token currentColor"
        }
      ]
    }
  },
  {
    "name": "GlimTabs",
    "description": "A tabbed interface component that allows switching between different content sections. Features an animated indicator that follows the selected tab.",
    "props": {
      "modelValue": {
        "name": "modelValue",
        "type": "any",
        "required": true,
        "description": "Currently selected tab ID (v-model)",
        "default": "tab1",
        "values": [
          "string",
          "number"
        ]
      },
      "items": {
        "name": "items",
        "type": "any",
        "required": true,
        "description": "Array of tab items to display",
        "default": "() => ["
      }
    },
    "events": {},
    "methods": {},
    "computed": {
      "defaultModelValue": {
        "name": "defaultModelValue",
        "description": "No description provided",
        "type": "any"
      },
      "selectedTab": {
        "name": "selectedTab",
        "description": "No description provided",
        "type": "any"
      }
    },
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-border-discrete)",
          "value": "var(--glim-color-border-discrete)",
          "description": "Color token var(--glim-color-border-discrete)"
        },
        {
          "name": "var(--glim-color-text-soft)",
          "value": "var(--glim-color-text-soft)",
          "description": "Color token var(--glim-color-text-soft)"
        },
        {
          "name": "var(--glim-color-text-strong)",
          "value": "var(--glim-color-text-strong)",
          "description": "Color token var(--glim-color-text-strong)"
        },
        {
          "name": "var(--glim-color-text-strong)",
          "value": "var(--glim-color-text-strong)",
          "description": "Color token var(--glim-color-text-strong)"
        },
        {
          "name": "var(--glim-color-border-strong)",
          "value": "var(--glim-color-border-strong)",
          "description": "Color token var(--glim-color-border-strong)"
        }
      ],
      "dimensions": [
        {
          "name": "var(--glim-dimension-padding-5)",
          "value": "var(--glim-dimension-padding-5)",
          "description": "Dimension token var(--glim-dimension-padding-5)"
        },
        {
          "name": "var(--glim-dimension-padding-4)",
          "value": "var(--glim-dimension-padding-4)",
          "description": "Dimension token var(--glim-dimension-padding-4)"
        }
      ],
      "strings": [
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "activeTab",
          "value": "activeTab",
          "description": "String token activeTab"
        },
        {
          "name": "tab1",
          "value": "tab1",
          "description": "String token tab1"
        },
        {
          "name": "tab2",
          "value": "tab2",
          "description": "String token tab2"
        },
        {
          "name": "activeSection",
          "value": "activeSection",
          "description": "String token activeSection"
        },
        {
          "name": "tabs",
          "value": "tabs",
          "description": "String token tabs"
        },
        {
          "name": "view",
          "value": "view",
          "description": "String token view"
        },
        {
          "name": "Details",
          "value": "Details",
          "description": "String token Details"
        },
        {
          "name": "Reviews",
          "value": "Reviews",
          "description": "String token Reviews"
        },
        {
          "name": "tab1",
          "value": "tab1",
          "description": "String token tab1"
        },
        {
          "name": "tab1",
          "value": "tab1",
          "description": "String token tab1"
        },
        {
          "name": "tab2",
          "value": "tab2",
          "description": "String token tab2"
        },
        {
          "name": "tab3",
          "value": "tab3",
          "description": "String token tab3"
        },
        {
          "name": "tab1",
          "value": "tab1",
          "description": "String token tab1"
        },
        {
          "name": "number",
          "value": "number",
          "description": "String token number"
        },
        {
          "name": "0px",
          "value": "0px",
          "description": "String token 0px"
        },
        {
          "name": "tabs",
          "value": "tabs",
          "description": "String token tabs"
        },
        {
          "name": "tablist",
          "value": "tablist",
          "description": "String token tablist"
        },
        {
          "name": "tabsRef",
          "value": "tabsRef",
          "description": "String token tabsRef"
        },
        {
          "name": "tabs__item",
          "value": "tabs__item",
          "description": "String token tabs__item"
        },
        {
          "name": "tabs__item--active",
          "value": "tabs__item--active",
          "description": "String token tabs__item--active"
        },
        {
          "name": "tabs__item--disabled",
          "value": "tabs__item--disabled",
          "description": "String token tabs__item--disabled"
        },
        {
          "name": "tab",
          "value": "tab",
          "description": "String token tab"
        },
        {
          "name": "tabs__indicator",
          "value": "tabs__indicator",
          "description": "String token tabs__indicator"
        },
        {
          "name": "indicatorStyle",
          "value": "indicatorStyle",
          "description": "String token indicatorStyle"
        }
      ]
    }
  },
  {
    "name": "GlimToggle",
    "description": "GlimToggle A toggle switch component for boolean inputs, similar to a checkbox but with a sliding visual design. Used for enabling/disabling settings or features.",
    "props": {},
    "events": {},
    "methods": {},
    "computed": {
      "isActive": {
        "name": "isActive",
        "description": "No description provided",
        "type": "any"
      }
    },
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-solid-400)",
          "value": "var(--glim-color-solid-400)",
          "description": "Color token var(--glim-color-solid-400)"
        },
        {
          "name": "var(--glim-color-solid-100)",
          "value": "var(--glim-color-solid-100)",
          "description": "Color token var(--glim-color-solid-100)"
        },
        {
          "name": "var(--glim-color-solid-900)",
          "value": "var(--glim-color-solid-900)",
          "description": "Color token var(--glim-color-solid-900)"
        }
      ],
      "dimensions": [
        {
          "name": "var(--glim-dimension-padding-1)",
          "value": "var(--glim-dimension-padding-1)",
          "description": "Dimension token var(--glim-dimension-padding-1)"
        },
        {
          "name": "var(--glim-dimension-gap-3)",
          "value": "var(--glim-dimension-gap-3)",
          "description": "Dimension token var(--glim-dimension-gap-3)"
        },
        {
          "name": "var(--glim-dimension-gap-3)",
          "value": "var(--glim-dimension-gap-3)",
          "description": "Dimension token var(--glim-dimension-gap-3)"
        },
        {
          "name": "var(--glim-dimension-gap-3)",
          "value": "var(--glim-dimension-gap-3)",
          "description": "Dimension token var(--glim-dimension-gap-3)"
        }
      ],
      "strings": [
        {
          "name": "enabled",
          "value": "enabled",
          "description": "String token enabled"
        },
        {
          "name": "darkMode",
          "value": "darkMode",
          "description": "String token darkMode"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "notifications",
          "value": "notifications",
          "description": "String token notifications"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "small",
          "value": "small",
          "description": "String token small"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "default",
          "value": "default",
          "description": "String token default"
        },
        {
          "name": "string",
          "value": "string",
          "description": "String token string"
        },
        {
          "name": "true",
          "value": "true",
          "description": "String token true"
        },
        {
          "name": "toggle",
          "value": "toggle",
          "description": "String token toggle"
        },
        {
          "name": "toggle--active",
          "value": "toggle--active",
          "description": "String token toggle--active"
        },
        {
          "name": "toggle--disabled",
          "value": "toggle--disabled",
          "description": "String token toggle--disabled"
        },
        {
          "name": "button",
          "value": "button",
          "description": "String token button"
        },
        {
          "name": "switch",
          "value": "switch",
          "description": "String token switch"
        },
        {
          "name": "isActive",
          "value": "isActive",
          "description": "String token isActive"
        },
        {
          "name": "disabled",
          "value": "disabled",
          "description": "String token disabled"
        },
        {
          "name": "toggle",
          "value": "toggle",
          "description": "String token toggle"
        },
        {
          "name": "toggle__track",
          "value": "toggle__track",
          "description": "String token toggle__track"
        },
        {
          "name": "toggle__thumb",
          "value": "toggle__thumb",
          "description": "String token toggle__thumb"
        }
      ]
    }
  },
  {
    "name": "GlimTooltip",
    "description": "GlimTooltip A tooltip component that displays additional information when hovering over or focusing on an element. Tooltips can be positioned in different directions and can contain text or custom content.",
    "props": {},
    "events": {},
    "methods": {},
    "computed": {},
    "tokens": {
      "colors": [
        {
          "name": "var(--glim-color-elevation-background-inverse)",
          "value": "var(--glim-color-elevation-background-inverse)",
          "description": "Color token var(--glim-color-elevation-background-inverse)"
        },
        {
          "name": "var(--glim-color-text-strong-inverse)",
          "value": "var(--glim-color-text-strong-inverse)",
          "description": "Color token var(--glim-color-text-strong-inverse)"
        }
      ],
      "dimensions": [
        {
          "name": "var(--glim-dimension-padding-3)",
          "value": "var(--glim-dimension-padding-3)",
          "description": "Dimension token var(--glim-dimension-padding-3)"
        },
        {
          "name": "var(--glim-dimension-padding-4)",
          "value": "var(--glim-dimension-padding-4)",
          "description": "Dimension token var(--glim-dimension-padding-4)"
        },
        {
          "name": "var(--glim-dimension-size-1)",
          "value": "var(--glim-dimension-size-1)",
          "description": "Dimension token var(--glim-dimension-size-1)"
        },
        {
          "name": "var(--glim-dimension-size-1)",
          "value": "var(--glim-dimension-size-1)",
          "description": "Dimension token var(--glim-dimension-size-1)"
        },
        {
          "name": "var(--glim-dimension-size-1)",
          "value": "var(--glim-dimension-size-1)",
          "description": "Dimension token var(--glim-dimension-size-1)"
        },
        {
          "name": "var(--glim-dimension-size-1)",
          "value": "var(--glim-dimension-size-1)",
          "description": "Dimension token var(--glim-dimension-size-1)"
        },
        {
          "name": "var(--glim-dimension-size-1)",
          "value": "var(--glim-dimension-size-1)",
          "description": "Dimension token var(--glim-dimension-size-1)"
        },
        {
          "name": "var(--glim-dimension-size-1)",
          "value": "var(--glim-dimension-size-1)",
          "description": "Dimension token var(--glim-dimension-size-1)"
        },
        {
          "name": "var(--glim-dimension-size-1)",
          "value": "var(--glim-dimension-size-1)",
          "description": "Dimension token var(--glim-dimension-size-1)"
        },
        {
          "name": "var(--glim-dimension-size-1)",
          "value": "var(--glim-dimension-size-1)",
          "description": "Dimension token var(--glim-dimension-size-1)"
        },
        {
          "name": "var(--glim-dimension-size-1)",
          "value": "var(--glim-dimension-size-1)",
          "description": "Dimension token var(--glim-dimension-size-1)"
        },
        {
          "name": "var(--glim-dimension-size-1)",
          "value": "var(--glim-dimension-size-1)",
          "description": "Dimension token var(--glim-dimension-size-1)"
        },
        {
          "name": "var(--glim-dimension-size-1)",
          "value": "var(--glim-dimension-size-1)",
          "description": "Dimension token var(--glim-dimension-size-1)"
        },
        {
          "name": "var(--glim-dimension-size-1)",
          "value": "var(--glim-dimension-size-1)",
          "description": "Dimension token var(--glim-dimension-size-1)"
        }
      ],
      "strings": [
        {
          "name": "tooltip",
          "value": "tooltip",
          "description": "String token tooltip"
        },
        {
          "name": "visible",
          "value": "visible",
          "description": "String token visible"
        },
        {
          "name": "tooltip__arrow",
          "value": "tooltip__arrow",
          "description": "String token tooltip__arrow"
        },
        {
          "name": "top",
          "value": "top",
          "description": "String token top"
        },
        {
          "name": "visible",
          "value": "visible",
          "description": "String token visible"
        },
        {
          "name": "bottom",
          "value": "bottom",
          "description": "String token bottom"
        },
        {
          "name": "showHelp",
          "value": "showHelp",
          "description": "String token showHelp"
        },
        {
          "name": "left",
          "value": "left",
          "description": "String token left"
        },
        {
          "name": "true",
          "value": "true",
          "description": "String token true"
        },
        {
          "name": "top",
          "value": "top",
          "description": "String token top"
        },
        {
          "name": "right",
          "value": "right",
          "description": "String token right"
        },
        {
          "name": "bottom",
          "value": "bottom",
          "description": "String token bottom"
        },
        {
          "name": "left",
          "value": "left",
          "description": "String token left"
        },
        {
          "name": "top",
          "value": "top",
          "description": "String token top"
        },
        {
          "name": "right",
          "value": "right",
          "description": "String token right"
        },
        {
          "name": "bottom",
          "value": "bottom",
          "description": "String token bottom"
        },
        {
          "name": "left",
          "value": "left",
          "description": "String token left"
        },
        {
          "name": "top",
          "value": "top",
          "description": "String token top"
        }
      ]
    }
  },
  {
    "name": "ExampleComponent",
    "description": "ExampleComponent A demonstration component showing how to properly document Vue components. This component serves as a reference for the documentation format.",
    "props": {
      "title": {
        "name": "title",
        "type": "String",
        "required": false,
        "description": "The main title of the component",
        "default": "Default Title"
      },
      "description": {
        "name": "description",
        "type": "String",
        "required": true,
        "description": "Descriptive text to display below the title"
      },
      "isActive": {
        "name": "isActive",
        "type": "Boolean",
        "required": false,
        "description": "Whether the component is in an active state",
        "default": false
      },
      "buttonText": {
        "name": "buttonText",
        "type": "String",
        "required": false,
        "description": "Text to display on the button",
        "default": "Click Me"
      }
    },
    "events": {
      "update:isActive": {
        "name": "update:isActive",
        "description": "Emitted when the button is clicked",
        "params": [
          {
            "name": "isActive",
            "type": "Boolean",
            "description": "The new active state"
          }
        ]
      },
      "click": {
        "name": "click",
        "description": "Emitted when the button is clicked with additional data",
        "params": [
          {
            "name": "action",
            "type": "String",
            "description": "The action that was performed\n   *"
          },
          {
            "name": "data",
            "type": "Object",
            "description": "Additional data about the click"
          }
        ]
      }
    },
    "methods": {
      "handleClick": {
        "name": "handleClick",
        "description": "No description provided",
        "params": [
          {
            "name": "isActive",
            "type": "Boolean",
            "description": "The new active state",
            "required": true
          },
          {
            "name": "action",
            "type": "String",
            "description": "The action that was performed",
            "required": true
          },
          {
            "name": "data",
            "type": "Object",
            "description": "Additional data about the click",
            "required": true
          }
        ],
        "returns": {
          "type": "any",
          "description": "Nothing"
        }
      }
    },
    "computed": {
      "formattedTitle": {
        "name": "formattedTitle",
        "description": "No description provided",
        "type": "any"
      }
    },
    "tokens": {
      "colors": [
        {
          "name": "var(--color-border)",
          "value": "var(--color-border)",
          "description": "Color token var(--color-border)"
        },
        {
          "name": "var(--border-radius-md)",
          "value": "var(--border-radius-md)",
          "description": "Color token var(--border-radius-md)"
        },
        {
          "name": "var(--color-background)",
          "value": "var(--color-background)",
          "description": "Color token var(--color-background)"
        },
        {
          "name": "var(--color-primary)",
          "value": "var(--color-primary)",
          "description": "Color token var(--color-primary)"
        },
        {
          "name": "var(--color-primary-light)",
          "value": "var(--color-primary-light)",
          "description": "Color token var(--color-primary-light)"
        },
        {
          "name": "var(--color-text)",
          "value": "var(--color-text)",
          "description": "Color token var(--color-text)"
        },
        {
          "name": "var(--color-primary)",
          "value": "var(--color-primary)",
          "description": "Color token var(--color-primary)"
        },
        {
          "name": "var(--color-white)",
          "value": "var(--color-white)",
          "description": "Color token var(--color-white)"
        },
        {
          "name": "var(--border-radius-sm)",
          "value": "var(--border-radius-sm)",
          "description": "Color token var(--border-radius-sm)"
        }
      ],
      "dimensions": [
        {
          "name": "var(--spacing-md)",
          "value": "var(--spacing-md)",
          "description": "Dimension token var(--spacing-md)"
        },
        {
          "name": "var(--spacing-sm)",
          "value": "var(--spacing-sm)",
          "description": "Dimension token var(--spacing-sm)"
        },
        {
          "name": "var(--spacing-sm)",
          "value": "var(--spacing-sm)",
          "description": "Dimension token var(--spacing-sm)"
        },
        {
          "name": "var(--spacing-md)",
          "value": "var(--spacing-md)",
          "description": "Dimension token var(--spacing-md)"
        }
      ],
      "strings": [
        {
          "name": "example-component",
          "value": "example-component",
          "description": "String token example-component"
        },
        {
          "name": "is-active",
          "value": "is-active",
          "description": "String token is-active"
        },
        {
          "name": "handleClick",
          "value": "handleClick",
          "description": "String token handleClick"
        },
        {
          "name": "vue",
          "value": "vue",
          "description": "String token vue"
        },
        {
          "name": "true",
          "value": "true",
          "description": "String token true"
        },
        {
          "name": "Deactivate",
          "value": "Deactivate",
          "description": "String token Deactivate"
        },
        {
          "name": "click",
          "value": "click",
          "description": "String token click"
        },
        {
          "name": "click",
          "value": "click",
          "description": "String token click"
        },
        {
          "name": "toggle",
          "value": "toggle",
          "description": "String token toggle"
        }
      ]
    }
  }
]